{"version":1,"windowDimensions":{"x":-8,"y":-8,"width":1936,"height":1056,"maximized":true},"grammars":{"grammarOverridesByPath":{}},"project":{"deserializer":"Project","paths":["C:\\automation\\ops\\Ruby\\supplier\\scripts"],"buffers":[{"id":"8717ffe0174d39ad739d8dddead68ec1","text":"#Todd Jones - SupplierModels.rb script\n#Purpose - to compare a delta file against the supplier providers products web service\n#Modifed 8/11, added menu to helper files, added indicator for url and enviornment to console\n#\t\t\tadd code to call script to refresh againest web services\n\nrequire 'curb'\nrequire 'nokogiri'\n# require 'win32console' #this line may not be necessary after Ruby 2.0\nrequire_relative 'SUPRubyHelpers'\n\nfail=[]\npass=[]\nmodel_hash = Hash.new\nt = Time.now\n\nTitle=\"Ops-1720 Supplier Models DB Web Validation\"\nurl=getenv(Title)\nenv=url+\"//supplierservices/Provider.svc/GetProvidersProducts\"\n# valid = false\n# until valid\n\t# puts \"Enter the number for the environment you are testing:\n\t# 1 medicare-prod-predeploy.cgifederal.com\n\t# 2 qa.medicare.gov\n\t# 3 staging.medicare.gov\n\t# 4 www.medicare.gov\"\n\t# environment = gets.strip!\n\t# case environment\n\t\t# when \"1\"\n\t\t\t# env = \"medicare-prod-predeploy.cgifederal.com/supplierservices/Provider.svc/GetProvidersProducts\"\n\t\t\t# valid = true\n\t\t# when \"2\"\n\t\t\t# env = \"qa.medicare.gov/supplierservices/Provider.svc/GetProvidersProducts\"\n\t\t\t# valid = true\n\t\t# when \"3\"\n\t\t\t# env = \"staging.medicare.gov/supplierservices/Provider.svc/GetProvidersProducts\"\n\t\t\t# valid = true\n\t\t# when \"4\"\n\t\t\t# env = \"www.medicare.gov/supplierservices/Provider.svc/GetProvidersProducts\"\n\t\t\t# valid = true\n\t\t# else\n\t\t   # puts \"Invalid input\\nPlease try again\\n\\n\"\n\t# end\n# end #end until\noutputFile = File.open(\"../output/Ops-1720-SupplierModels_\"+\"#{t.strftime(\"%Y%m%d\")}.txt\", \"w\")\n#INPUT file section\ndelta_file = Dir.glob(\"../output/brand_extract_delta*\")\nfile_location = delta_file[-1].gsub(\"/\", \"\\\\\")\nputs \"Parsing #{file_location} as input file.\nThis may take a minute...\\n\\n\"\nFile.foreach(file_location) do |line|\n\tparsed_line = line.split(\"\\t\")\n\taction = parsed_line[0]\n\tdeltaID = parsed_line[1]\n\tdeltaCBSA = parsed_line[2]\n\tdeltaCTGY = parsed_line[3]\n\tdeltaMFTR = parsed_line[4]\n\tdeltaModel = parsed_line[5].strip\n\tmodel_hash[\"#{deltaID}|\"\"#{deltaCBSA}|\"\"#{deltaCTGY}|\"\"#{deltaMFTR}|\"\"#{action}\"] ||= []\n\tmodel_hash[\"#{deltaID}|\"\"#{deltaCBSA}|\"\"#{deltaCTGY}|\"\"#{deltaMFTR}|\"\"#{action}\"] << \"#{deltaModel}\" # Loads all of the models into a hash\nend\n\nmodel_hash.each do |deltaID, deltaModel|\n\tparsedID = deltaID.split('|')\n\tdeltaID = parsedID[0]\n\tdeltaCBSA = parsedID[1]\n\tdeltaCTGY = parsedID[2]\n\tdeltaMFTR = parsedID[3]\n\taction = parsedID[4]\n\thttpstring=\"https://#{env}/#{deltaID}/#{deltaCBSA}/#{deltaCTGY}\"\n\n\t# begin\n\t\t# req= Curl::Easy.new(\"https://#{env}/#{deltaID}/#{deltaCBSA}/#{deltaCTGY}\")\n\t\t# req.ssl_verify_peer = false\n\t\t# req.perform do |curl|\n\t\t\t# curl.headers[\"cookie\"] = \"ASPSessionKey=\"\n\t\t# end\n\t# rescue\n\t\t# tries ||= 5\n\t\t# puts \"There was an issue with the connection, waiting 30 seconds and trying again.\"\n\t\t# sleep 30\n\t\t# tries -= 1\n\t\t# if tries > 0\n\t\t\t# retry\n\t\t# else\n\t\t\t# abort(\"webservice connection is unstable - aborting test.\\nPlease try again later.\")\n\t\t# end\n\t# end\nreq=getWebResponse(httpstring)\n\tdoc = Nokogiri::HTML(req.body_str)\n\tdb_models = []\n\tdoc.css(\"mftrname\").each do |item|\n\t\tname = item.text\n\t\tmodels = item.next\n\t\tdb_models.push models.text.split('|')\n\tend\n\n\tdb_models.flatten!\n\tdeltaModel.each do |model|\n\t\tif action == \"+ ADDED +\"\n\t\t\tif db_models.grep(\"#{model}\").any?\n\t\t\t\tputs \"PASS + ADDED + #{deltaID} #{model}\"\n\t\t\t\tpass << \"#{deltaID} #{model}\"\n\t\t\telse\n\t\t\t\tputs \"FAIL + ADDED + #{deltaID} #{model}\"\n\t\t\t\tfail << \"+ ADDED +\\t#{deltaID}\\t#{deltaCBSA}\\t#{deltaCTGY}\\t#{deltaMFTR}\\t#{model}\"\n\t\t\tend #end if\n\t\telsif action == \"-DELETED-\"\n\t\t\tif doc.css(\"mftrname\").grep(\"#{deltaMFTR}\").any? == FALSE\n\t\t\t\tputs \"PASS -DELETED- #{deltaID} #{model}\"\n\t\t\t\tpass << \"#{deltaID} #{model}\"\n\t\t\telsif db_models.grep(\"#{model}\").any?\n\t\t\t\tputs \"FAIL -DELETED- #{deltaID} #{model}\"\n\t\t\t\tfail << \"-DELETED-\\t#{deltaID}\\t#{deltaCBSA}\\t#{deltaCTGY}\\t#{deltaMFTR}\\t#{model}\"\n\t\t\telse\n\t\t\t\tputs \"PASS -DELETED- #{deltaID} #{model}\"\n\t\t\t\tpass << \"#{deltaID} #{model}\"\n\t\t\tend #end if\n\t\tend #end if\n\tend #end models loop\nend #end hash loop\n\n\nputs \"\\n #{Title}\"\nputs \"\\nEnvironment test #{url}\\n\"\n\nputs \"#{pass.count} have passed\\n#{fail.count} have failed.\"\n#output file section\noutputFile.write(\"Supplier Models Validation Complete\n#{t.strftime(\"%m/%d/%Y %H:%M\")}\n#{env}\nTotal items changed: #{pass.count + fail.count}\n#{pass.count} have passed\n#{fail.count} have failed\\n\\n\")\noutputFile.write(\"PASSED Items\n--------------------\\n\")\n\npass.each do |item|\n\t#outputFile.write(\"PASSED #{item}\\n\")\nend\n\noutputFile.write(\"\\nFAILED Items\n--------------------\\n\")\nfail.each do |item|\n\toutputFile.write(\"FAILED #{item}\\n\")\nend\noutputFile.close\n\nputs \"Done\\a\"\n","defaultMarkerLayerId":"0","markerLayers":{"0":{"id":"0","maintainHistory":false,"markersById":{},"version":2},"1":{"id":"1","maintainHistory":false,"markersById":{},"version":2},"2":{"id":"2","maintainHistory":true,"markersById":{"1":{"range":{"start":{"row":7,"column":22},"end":{"row":7,"column":22}},"properties":{"type":"selection","preserveFolds":true,"goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}},"version":2},"4":{"id":"4","maintainHistory":false,"markersById":{},"version":2},"6":{"id":"6","maintainHistory":false,"markersById":{},"version":2},"8":{"id":"8","maintainHistory":false,"markersById":{},"version":2}},"nextMarkerLayerId":9,"history":{"version":3,"nextCheckpointId":11,"undoStack":[{"type":"group-start","snapshot":{"2":{"1":{"range":[[7,0],[7,0]],"properties":{"type":"selection","preserveFolds":true,"goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[7,0],[7,0]],"newRange":[[7,0],[7,1]],"oldText":"","newText":"#"}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[7,1],[7,1]],"properties":{"type":"selection","preserveFolds":true,"goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[7,1],[7,1]],"properties":{"type":"selection","preserveFolds":true,"goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[7,1],[7,1]],"newRange":[[7,1],[7,2]],"oldText":"","newText":" "}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[7,2],[7,2]],"properties":{"type":"selection","preserveFolds":true,"goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[7,24],[7,24]],"properties":{"type":"selection","preserveFolds":true,"goalScreenRange":null},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[7,24],[7,24]],"newRange":[[7,24],[7,25]],"oldText":"","newText":" "}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[7,25],[7,25]],"properties":{"type":"selection","preserveFolds":true,"goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[7,25],[7,25]],"properties":{"type":"selection","preserveFolds":true,"goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[7,25],[7,25]],"newRange":[[7,25],[7,71]],"oldText":"","newText":"#this line may not be necessary after Ruby 2.0"}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[7,71],[7,71]],"properties":{"type":"selection","preserveFolds":true,"goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[7,71],[7,71]],"properties":{"type":"selection","preserveFolds":true,"goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[95,0],[95,1]],"newRange":[[95,0],[95,0]],"oldText":"\t","newText":""}},{"type":"change","content":{"oldRange":[[73,25],[73,26]],"newRange":[[73,25],[73,25]],"oldText":" ","newText":""}},{"type":"change","content":{"oldRange":[[69,0],[69,1]],"newRange":[[69,0],[69,0]],"oldText":"\t","newText":""}},{"type":"change","content":{"oldRange":[[47,45],[47,46]],"newRange":[[47,45],[47,45]],"oldText":" ","newText":""}},{"type":"change","content":{"oldRange":[[45,55],[45,56]],"newRange":[[45,55],[45,55]],"oldText":" ","newText":""}},{"type":"change","content":{"oldRange":[[147,13],[147,13]],"newRange":[[147,13],[148,0]],"oldText":"","newText":"\n"}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[7,71],[7,71]],"properties":{"type":"selection","preserveFolds":true,"goalScreenRange":null},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[7,71],[7,71]],"properties":{"type":"selection","preserveFolds":true,"goalScreenRange":null},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[0,0],[0,0]],"newRange":[[0,0],[147,13]],"oldText":"","newText":"#Todd Jones - SupplierModels.rb script\n#Purpose - to compare a delta file against the supplier providers products web service\n#Modifed 8/11, added menu to helper files, added indicator for url and enviornment to console\n#\t\t\tadd code to call script to refresh againest web services\n\nrequire 'curb'\nrequire 'nokogiri'\nrequire 'win32console'\nrequire_relative 'SUPRubyHelpers'\n\nfail=[]\npass=[]\nmodel_hash = Hash.new\nt = Time.now\n\nTitle=\"Ops-1720 Supplier Models DB Web Validation\"\nurl=getenv(Title)\nenv=url+\"//supplierservices/Provider.svc/GetProvidersProducts\"\n# valid = false\n# until valid\n\t# puts \"Enter the number for the environment you are testing:\n\t# 1 medicare-prod-predeploy.cgifederal.com\n\t# 2 qa.medicare.gov\n\t# 3 staging.medicare.gov\n\t# 4 www.medicare.gov\"\n\t# environment = gets.strip!\n\t# case environment\n\t\t# when \"1\"\n\t\t\t# env = \"medicare-prod-predeploy.cgifederal.com/supplierservices/Provider.svc/GetProvidersProducts\"\n\t\t\t# valid = true\n\t\t# when \"2\"\n\t\t\t# env = \"qa.medicare.gov/supplierservices/Provider.svc/GetProvidersProducts\"\n\t\t\t# valid = true\n\t\t# when \"3\"\n\t\t\t# env = \"staging.medicare.gov/supplierservices/Provider.svc/GetProvidersProducts\"\n\t\t\t# valid = true\n\t\t# when \"4\"\n\t\t\t# env = \"www.medicare.gov/supplierservices/Provider.svc/GetProvidersProducts\"\n\t\t\t# valid = true\n\t\t# else\n\t\t   # puts \"Invalid input\\nPlease try again\\n\\n\"\n\t# end\n# end #end until\noutputFile = File.open(\"../output/Ops-1720-SupplierModels_\"+\"#{t.strftime(\"%Y%m%d\")}.txt\", \"w\")\n#INPUT file section\ndelta_file = Dir.glob(\"../output/brand_extract_delta*\") \nfile_location = delta_file[-1].gsub(\"/\", \"\\\\\")\nputs \"Parsing #{file_location} as input file. \nThis may take a minute...\\n\\n\"\nFile.foreach(file_location) do |line|\n\tparsed_line = line.split(\"\\t\")\n\taction = parsed_line[0]\n\tdeltaID = parsed_line[1]\n\tdeltaCBSA = parsed_line[2]\n\tdeltaCTGY = parsed_line[3]\n\tdeltaMFTR = parsed_line[4]\n\tdeltaModel = parsed_line[5].strip\n\tmodel_hash[\"#{deltaID}|\"\"#{deltaCBSA}|\"\"#{deltaCTGY}|\"\"#{deltaMFTR}|\"\"#{action}\"] ||= []\n\tmodel_hash[\"#{deltaID}|\"\"#{deltaCBSA}|\"\"#{deltaCTGY}|\"\"#{deltaMFTR}|\"\"#{action}\"] << \"#{deltaModel}\" # Loads all of the models into a hash\nend\n\nmodel_hash.each do |deltaID, deltaModel|\n\tparsedID = deltaID.split('|')\n\tdeltaID = parsedID[0]\n\tdeltaCBSA = parsedID[1]\n\tdeltaCTGY = parsedID[2]\n\tdeltaMFTR = parsedID[3]\n\taction = parsedID[4]\n\thttpstring=\"https://#{env}/#{deltaID}/#{deltaCBSA}/#{deltaCTGY}\"\n\t\n\t# begin\n\t\t# req= Curl::Easy.new(\"https://#{env}/#{deltaID}/#{deltaCBSA}/#{deltaCTGY}\")\n\t\t# req.ssl_verify_peer = false\n\t\t# req.perform do |curl| \n\t\t\t# curl.headers[\"cookie\"] = \"ASPSessionKey=\"\n\t\t# end\n\t# rescue\n\t\t# tries ||= 5\n\t\t# puts \"There was an issue with the connection, waiting 30 seconds and trying again.\"\n\t\t# sleep 30\n\t\t# tries -= 1\n\t\t# if tries > 0\n\t\t\t# retry\n\t\t# else\n\t\t\t# abort(\"webservice connection is unstable - aborting test.\\nPlease try again later.\")\n\t\t# end\n\t# end\nreq=getWebResponse(httpstring)\n\tdoc = Nokogiri::HTML(req.body_str)\n\tdb_models = []\n\tdoc.css(\"mftrname\").each do |item|\n\t\tname = item.text\n\t\tmodels = item.next\n\t\tdb_models.push models.text.split('|')\n\tend\n\t\n\tdb_models.flatten!\n\tdeltaModel.each do |model|\n\t\tif action == \"+ ADDED +\"\n\t\t\tif db_models.grep(\"#{model}\").any?\n\t\t\t\tputs \"PASS + ADDED + #{deltaID} #{model}\"\n\t\t\t\tpass << \"#{deltaID} #{model}\"\n\t\t\telse\n\t\t\t\tputs \"FAIL + ADDED + #{deltaID} #{model}\"\n\t\t\t\tfail << \"+ ADDED +\\t#{deltaID}\\t#{deltaCBSA}\\t#{deltaCTGY}\\t#{deltaMFTR}\\t#{model}\"\n\t\t\tend #end if\n\t\telsif action == \"-DELETED-\"\n\t\t\tif doc.css(\"mftrname\").grep(\"#{deltaMFTR}\").any? == FALSE\n\t\t\t\tputs \"PASS -DELETED- #{deltaID} #{model}\"\n\t\t\t\tpass << \"#{deltaID} #{model}\"\n\t\t\telsif db_models.grep(\"#{model}\").any?\n\t\t\t\tputs \"FAIL -DELETED- #{deltaID} #{model}\"\n\t\t\t\tfail << \"-DELETED-\\t#{deltaID}\\t#{deltaCBSA}\\t#{deltaCTGY}\\t#{deltaMFTR}\\t#{model}\"\n\t\t\telse\n\t\t\t\tputs \"PASS -DELETED- #{deltaID} #{model}\"\n\t\t\t\tpass << \"#{deltaID} #{model}\"\n\t\t\tend #end if\n\t\tend #end if\n\tend #end models loop\nend #end hash loop\n\n\nputs \"\\n #{Title}\"\nputs \"\\nEnvironment test #{url}\\n\"\n\nputs \"#{pass.count} have passed\\n#{fail.count} have failed.\"\n#output file section\noutputFile.write(\"Supplier Models Validation Complete\n#{t.strftime(\"%m/%d/%Y %H:%M\")}\n#{env}\nTotal items changed: #{pass.count + fail.count}\n#{pass.count} have passed\n#{fail.count} have failed\\n\\n\")\noutputFile.write(\"PASSED Items\n--------------------\\n\")\n\npass.each do |item|\n\t#outputFile.write(\"PASSED #{item}\\n\")\nend\n\noutputFile.write(\"\\nFAILED Items\n--------------------\\n\")\nfail.each do |item|\n\toutputFile.write(\"FAILED #{item}\\n\")\nend\noutputFile.close\n\nputs \"Done\\a\""}},{"type":"change","content":{"oldRange":[[147,13],[295,0]],"newRange":[[147,13],[147,13]],"oldText":"#Todd Jones - SupplierModels.rb script\r\n#Purpose - to compare a delta file against the supplier providers products web service\r\n#Modifed 8/11, added menu to helper files, added indicator for url and enviornment to console\r\n#\t\t\tadd code to call script to refresh againest web services\r\n\r\nrequire 'curb'\r\nrequire 'nokogiri'\r\n# require 'win32console' #this line may not be necessary after Ruby 2.0\r\nrequire_relative 'SUPRubyHelpers'\r\n\r\nfail=[]\r\npass=[]\r\nmodel_hash = Hash.new\r\nt = Time.now\r\n\r\nTitle=\"Ops-1720 Supplier Models DB Web Validation\"\r\nurl=getenv(Title)\r\nenv=url+\"//supplierservices/Provider.svc/GetProvidersProducts\"\r\n# valid = false\r\n# until valid\r\n\t# puts \"Enter the number for the environment you are testing:\r\n\t# 1 medicare-prod-predeploy.cgifederal.com\r\n\t# 2 qa.medicare.gov\r\n\t# 3 staging.medicare.gov\r\n\t# 4 www.medicare.gov\"\r\n\t# environment = gets.strip!\r\n\t# case environment\r\n\t\t# when \"1\"\r\n\t\t\t# env = \"medicare-prod-predeploy.cgifederal.com/supplierservices/Provider.svc/GetProvidersProducts\"\r\n\t\t\t# valid = true\r\n\t\t# when \"2\"\r\n\t\t\t# env = \"qa.medicare.gov/supplierservices/Provider.svc/GetProvidersProducts\"\r\n\t\t\t# valid = true\r\n\t\t# when \"3\"\r\n\t\t\t# env = \"staging.medicare.gov/supplierservices/Provider.svc/GetProvidersProducts\"\r\n\t\t\t# valid = true\r\n\t\t# when \"4\"\r\n\t\t\t# env = \"www.medicare.gov/supplierservices/Provider.svc/GetProvidersProducts\"\r\n\t\t\t# valid = true\r\n\t\t# else\r\n\t\t   # puts \"Invalid input\\nPlease try again\\n\\n\"\r\n\t# end\r\n# end #end until\r\noutputFile = File.open(\"../output/Ops-1720-SupplierModels_\"+\"#{t.strftime(\"%Y%m%d\")}.txt\", \"w\")\r\n#INPUT file section\r\ndelta_file = Dir.glob(\"../output/brand_extract_delta*\")\r\nfile_location = delta_file[-1].gsub(\"/\", \"\\\\\")\r\nputs \"Parsing #{file_location} as input file.\r\nThis may take a minute...\\n\\n\"\r\nFile.foreach(file_location) do |line|\r\n\tparsed_line = line.split(\"\\t\")\r\n\taction = parsed_line[0]\r\n\tdeltaID = parsed_line[1]\r\n\tdeltaCBSA = parsed_line[2]\r\n\tdeltaCTGY = parsed_line[3]\r\n\tdeltaMFTR = parsed_line[4]\r\n\tdeltaModel = parsed_line[5].strip\r\n\tmodel_hash[\"#{deltaID}|\"\"#{deltaCBSA}|\"\"#{deltaCTGY}|\"\"#{deltaMFTR}|\"\"#{action}\"] ||= []\r\n\tmodel_hash[\"#{deltaID}|\"\"#{deltaCBSA}|\"\"#{deltaCTGY}|\"\"#{deltaMFTR}|\"\"#{action}\"] << \"#{deltaModel}\" # Loads all of the models into a hash\r\nend\r\n\r\nmodel_hash.each do |deltaID, deltaModel|\r\n\tparsedID = deltaID.split('|')\r\n\tdeltaID = parsedID[0]\r\n\tdeltaCBSA = parsedID[1]\r\n\tdeltaCTGY = parsedID[2]\r\n\tdeltaMFTR = parsedID[3]\r\n\taction = parsedID[4]\r\n\thttpstring=\"https://#{env}/#{deltaID}/#{deltaCBSA}/#{deltaCTGY}\"\r\n\r\n\t# begin\r\n\t\t# req= Curl::Easy.new(\"https://#{env}/#{deltaID}/#{deltaCBSA}/#{deltaCTGY}\")\r\n\t\t# req.ssl_verify_peer = false\r\n\t\t# req.perform do |curl|\r\n\t\t\t# curl.headers[\"cookie\"] = \"ASPSessionKey=\"\r\n\t\t# end\r\n\t# rescue\r\n\t\t# tries ||= 5\r\n\t\t# puts \"There was an issue with the connection, waiting 30 seconds and trying again.\"\r\n\t\t# sleep 30\r\n\t\t# tries -= 1\r\n\t\t# if tries > 0\r\n\t\t\t# retry\r\n\t\t# else\r\n\t\t\t# abort(\"webservice connection is unstable - aborting test.\\nPlease try again later.\")\r\n\t\t# end\r\n\t# end\r\nreq=getWebResponse(httpstring)\r\n\tdoc = Nokogiri::HTML(req.body_str)\r\n\tdb_models = []\r\n\tdoc.css(\"mftrname\").each do |item|\r\n\t\tname = item.text\r\n\t\tmodels = item.next\r\n\t\tdb_models.push models.text.split('|')\r\n\tend\r\n\r\n\tdb_models.flatten!\r\n\tdeltaModel.each do |model|\r\n\t\tif action == \"+ ADDED +\"\r\n\t\t\tif db_models.grep(\"#{model}\").any?\r\n\t\t\t\tputs \"PASS + ADDED + #{deltaID} #{model}\"\r\n\t\t\t\tpass << \"#{deltaID} #{model}\"\r\n\t\t\telse\r\n\t\t\t\tputs \"FAIL + ADDED + #{deltaID} #{model}\"\r\n\t\t\t\tfail << \"+ ADDED +\\t#{deltaID}\\t#{deltaCBSA}\\t#{deltaCTGY}\\t#{deltaMFTR}\\t#{model}\"\r\n\t\t\tend #end if\r\n\t\telsif action == \"-DELETED-\"\r\n\t\t\tif doc.css(\"mftrname\").grep(\"#{deltaMFTR}\").any? == FALSE\r\n\t\t\t\tputs \"PASS -DELETED- #{deltaID} #{model}\"\r\n\t\t\t\tpass << \"#{deltaID} #{model}\"\r\n\t\t\telsif db_models.grep(\"#{model}\").any?\r\n\t\t\t\tputs \"FAIL -DELETED- #{deltaID} #{model}\"\r\n\t\t\t\tfail << \"-DELETED-\\t#{deltaID}\\t#{deltaCBSA}\\t#{deltaCTGY}\\t#{deltaMFTR}\\t#{model}\"\r\n\t\t\telse\r\n\t\t\t\tputs \"PASS -DELETED- #{deltaID} #{model}\"\r\n\t\t\t\tpass << \"#{deltaID} #{model}\"\r\n\t\t\tend #end if\r\n\t\tend #end if\r\n\tend #end models loop\r\nend #end hash loop\r\n\r\n\r\nputs \"\\n #{Title}\"\r\nputs \"\\nEnvironment test #{url}\\n\"\r\n\r\nputs \"#{pass.count} have passed\\n#{fail.count} have failed.\"\r\n#output file section\r\noutputFile.write(\"Supplier Models Validation Complete\r\n#{t.strftime(\"%m/%d/%Y %H:%M\")}\r\n#{env}\r\nTotal items changed: #{pass.count + fail.count}\r\n#{pass.count} have passed\r\n#{fail.count} have failed\\n\\n\")\r\noutputFile.write(\"PASSED Items\r\n--------------------\\n\")\r\n\r\npass.each do |item|\r\n\t#outputFile.write(\"PASSED #{item}\\n\")\r\nend\r\n\r\noutputFile.write(\"\\nFAILED Items\r\n--------------------\\n\")\r\nfail.each do |item|\r\n\toutputFile.write(\"FAILED #{item}\\n\")\r\nend\r\noutputFile.close\r\n\r\nputs \"Done\\a\"\r\n","newText":""}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[147,13],[147,13]],"properties":{"type":"selection","preserveFolds":true,"goalScreenRange":null},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[7,22],[7,22]],"properties":{"type":"selection","preserveFolds":true,"goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[7,0],[7,0]],"newRange":[[7,0],[8,0]],"oldText":"","newText":"# require 'win32console' #this line may not be necessary after Ruby 2.0\n"}},{"type":"change","content":{"oldRange":[[8,0],[9,0]],"newRange":[[8,0],[8,0]],"oldText":"require 'win32console'\n","newText":""}},{"type":"change","content":{"oldRange":[[45,0],[45,0]],"newRange":[[45,0],[46,0]],"oldText":"","newText":"delta_file = Dir.glob(\"../output/brand_extract_delta*\")\n"}},{"type":"change","content":{"oldRange":[[46,0],[47,0]],"newRange":[[46,0],[46,0]],"oldText":"delta_file = Dir.glob(\"../output/brand_extract_delta*\") \n","newText":""}},{"type":"change","content":{"oldRange":[[47,0],[47,0]],"newRange":[[47,0],[48,0]],"oldText":"","newText":"puts \"Parsing #{file_location} as input file.\n"}},{"type":"change","content":{"oldRange":[[48,0],[49,0]],"newRange":[[48,0],[48,0]],"oldText":"puts \"Parsing #{file_location} as input file. \n","newText":""}},{"type":"change","content":{"oldRange":[[69,0],[69,0]],"newRange":[[69,0],[70,0]],"oldText":"","newText":"\n"}},{"type":"change","content":{"oldRange":[[70,0],[71,0]],"newRange":[[70,0],[70,0]],"oldText":"\t\n","newText":""}},{"type":"change","content":{"oldRange":[[73,0],[73,0]],"newRange":[[73,0],[74,0]],"oldText":"","newText":"\t\t# req.perform do |curl|\n"}},{"type":"change","content":{"oldRange":[[74,0],[75,0]],"newRange":[[74,0],[74,0]],"oldText":"\t\t# req.perform do |curl| \n","newText":""}},{"type":"change","content":{"oldRange":[[95,0],[95,0]],"newRange":[[95,0],[96,0]],"oldText":"","newText":"\n"}},{"type":"change","content":{"oldRange":[[96,0],[97,0]],"newRange":[[96,0],[96,0]],"oldText":"\t\n","newText":""}},{"type":"change","content":{"oldRange":[[147,0],[147,0]],"newRange":[[147,0],[148,0]],"oldText":"","newText":"puts \"Done\\a\"\n"}},{"type":"change","content":{"oldRange":[[148,0],[148,13]],"newRange":[[148,0],[148,0]],"oldText":"puts \"Done\\a\"","newText":""}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[8,0],[8,0]],"properties":{"type":"selection","preserveFolds":true,"goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[7,22],[7,22]],"properties":{"type":"selection","preserveFolds":true,"goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[7,0],[7,0]],"newRange":[[7,0],[8,0]],"oldText":"","newText":"require 'win32console'\n"}},{"type":"change","content":{"oldRange":[[8,0],[9,0]],"newRange":[[8,0],[8,0]],"oldText":"# require 'win32console' #this line may not be necessary after Ruby 2.0\n","newText":""}},{"type":"change","content":{"oldRange":[[45,0],[45,0]],"newRange":[[45,0],[46,0]],"oldText":"","newText":"delta_file = Dir.glob(\"../output/brand_extract_delta*\") \n"}},{"type":"change","content":{"oldRange":[[46,0],[47,0]],"newRange":[[46,0],[46,0]],"oldText":"delta_file = Dir.glob(\"../output/brand_extract_delta*\")\n","newText":""}},{"type":"change","content":{"oldRange":[[47,0],[47,0]],"newRange":[[47,0],[48,0]],"oldText":"","newText":"puts \"Parsing #{file_location} as input file. \n"}},{"type":"change","content":{"oldRange":[[48,0],[49,0]],"newRange":[[48,0],[48,0]],"oldText":"puts \"Parsing #{file_location} as input file.\n","newText":""}},{"type":"change","content":{"oldRange":[[69,0],[69,0]],"newRange":[[69,0],[70,0]],"oldText":"","newText":"\t\n"}},{"type":"change","content":{"oldRange":[[70,0],[71,0]],"newRange":[[70,0],[70,0]],"oldText":"\n","newText":""}},{"type":"change","content":{"oldRange":[[73,0],[73,0]],"newRange":[[73,0],[74,0]],"oldText":"","newText":"\t\t# req.perform do |curl| \n"}},{"type":"change","content":{"oldRange":[[74,0],[75,0]],"newRange":[[74,0],[74,0]],"oldText":"\t\t# req.perform do |curl|\n","newText":""}},{"type":"change","content":{"oldRange":[[95,0],[95,0]],"newRange":[[95,0],[96,0]],"oldText":"","newText":"\t\n"}},{"type":"change","content":{"oldRange":[[96,0],[97,0]],"newRange":[[96,0],[96,0]],"oldText":"\n","newText":""}},{"type":"change","content":{"oldRange":[[147,0],[147,0]],"newRange":[[147,0],[147,13]],"oldText":"","newText":"puts \"Done\\a\""}},{"type":"change","content":{"oldRange":[[147,13],[148,0]],"newRange":[[147,13],[147,13]],"oldText":"puts \"Done\\a\"\n","newText":""}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[8,0],[8,0]],"properties":{"type":"selection","preserveFolds":true,"goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[7,22],[7,22]],"properties":{"type":"selection","preserveFolds":true,"goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[7,0],[7,0]],"newRange":[[7,0],[8,0]],"oldText":"","newText":"# require 'win32console' #this line may not be necessary after Ruby 2.0\n"}},{"type":"change","content":{"oldRange":[[8,0],[9,0]],"newRange":[[8,0],[8,0]],"oldText":"require 'win32console'\n","newText":""}},{"type":"change","content":{"oldRange":[[45,0],[45,0]],"newRange":[[45,0],[46,0]],"oldText":"","newText":"delta_file = Dir.glob(\"../output/brand_extract_delta*\")\n"}},{"type":"change","content":{"oldRange":[[46,0],[47,0]],"newRange":[[46,0],[46,0]],"oldText":"delta_file = Dir.glob(\"../output/brand_extract_delta*\") \n","newText":""}},{"type":"change","content":{"oldRange":[[47,0],[47,0]],"newRange":[[47,0],[48,0]],"oldText":"","newText":"puts \"Parsing #{file_location} as input file.\n"}},{"type":"change","content":{"oldRange":[[48,0],[49,0]],"newRange":[[48,0],[48,0]],"oldText":"puts \"Parsing #{file_location} as input file. \n","newText":""}},{"type":"change","content":{"oldRange":[[69,0],[69,0]],"newRange":[[69,0],[70,0]],"oldText":"","newText":"\n"}},{"type":"change","content":{"oldRange":[[70,0],[71,0]],"newRange":[[70,0],[70,0]],"oldText":"\t\n","newText":""}},{"type":"change","content":{"oldRange":[[73,0],[73,0]],"newRange":[[73,0],[74,0]],"oldText":"","newText":"\t\t# req.perform do |curl|\n"}},{"type":"change","content":{"oldRange":[[74,0],[75,0]],"newRange":[[74,0],[74,0]],"oldText":"\t\t# req.perform do |curl| \n","newText":""}},{"type":"change","content":{"oldRange":[[95,0],[95,0]],"newRange":[[95,0],[96,0]],"oldText":"","newText":"\n"}},{"type":"change","content":{"oldRange":[[96,0],[97,0]],"newRange":[[96,0],[96,0]],"oldText":"\t\n","newText":""}},{"type":"change","content":{"oldRange":[[147,0],[147,0]],"newRange":[[147,0],[148,0]],"oldText":"","newText":"puts \"Done\\a\"\n"}},{"type":"change","content":{"oldRange":[[148,0],[148,13]],"newRange":[[148,0],[148,0]],"oldText":"puts \"Done\\a\"","newText":""}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[8,0],[8,0]],"properties":{"type":"selection","preserveFolds":true,"goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}}],"redoStack":[]},"encoding":"utf8","filePath":"C:\\automation\\ops\\Ruby\\supplier\\scripts\\OPS-1720-SupplierModels.rb","digestWhenLastPersisted":"291deeda576e50e40d980c8cbcff7a5d5a1743bd","preferredLineEnding":null,"nextMarkerId":7,"deserializer":"TextBuffer","version":5},{"id":"0658d43959cc96a7583fb839adcebaac","text":"# SupplierDelta.rb\r\n#\r\n#    Program to read Supplier data file, \r\n#      and then compare it to an older Supplier file to find new/deleted/changed\r\n#      records for testing. Includes file dates and record counts\r\n#\r\n# Created: 9/24/2013 Adam Stetser\r\n\r\n#require 'rubygems'\r\n#require 'net/http'\r\nrequire 'zip/zipfilesystem'\r\nrequire 'fileutils'\r\n\r\n# Create log file\r\ndef logFilename(d)\r\n   workingFile = 'Supplier_Ruby_Delta'\r\n   filedate = d.strftime(\"%Y%m%d\")\r\n   local_filename2 = '.txt'\r\n   @log_filename = @saveLocation+workingFile+filedate+local_filename2\r\n   @log_mFilename = @saveLocation+workingFile+\"Auto\"+filedate+local_filename2\r\n   @log_mhFilename = @saveLocation+workingFile+\"HeaderAuto\"+filedate+local_filename2\r\nend\r\n\r\n# Create array from input file\r\ndef loadArray(item)\r\n   inputa = Array.new\r\n   file = File.open(item, \"r\")\r\n   while (line = file.gets)\r\n      record = line[0..335]\r\n      inputa<<record\r\n   end\r\n   file.close\r\n   return(inputa)\r\nend\r\n\r\n# Obtain file creation time\r\ndef fileDate(file)\r\n   fileTime = File.ctime(file)\r\n   return fileTime\r\nend\r\n\r\n# Create an array of Provider ID\r\ndef getID(dataArray)\r\n   id = Array.new\r\n   dataArray.each do |item|\r\n      id<<item[0..9].to_s\r\n   end\r\n   return id\r\nend\r\n\r\n#validate that only 1 zip file is in the processing folder\r\n#def validateZipCount(zipCounter, location)\r\n#   if zipCounter > 1\r\n#      puts \"There are more files in \" + location + \" than expected. Please investigated and restart.\"\r\n#      exit\r\n#   end\r\n#   if zipCounter==0\r\n#      puts \"The zip file is missing from \" + location\r\n#      exit\r\n#   end\r\n#end\r\n\r\n\r\n# Main program ###############################################\r\n@saveLocation = \"../output/\"\r\npriorLocation =  \"../prior/\"\r\ncurrentLocation = \"../current/\"\r\n\r\nurlInput = String.new\r\ninput = String.new\r\ninputa = Array.new()\r\nt=Time.now\r\nlogFilename(t)\r\nfiledate = t.strftime(\"%Y%m%d\")\r\noutputArray = Array.new\r\nmOutputArray = Array.new\r\nchangeItems = 0\r\nadds = 0\r\ndeletes = 0\r\nmChangeItems = 0\r\nmAdds = 0\r\nmDeletes = 0\r\npriorPID = \"0\"\r\npriorFileArray = Array.new\r\ncurrentFileArray = Array.new\r\npriorZipFileName = String.new\r\n\r\n\r\n# Access data files\r\npriorFile = \"../prior/PECOS.DMEPAR.GLOB.EXTRACT\"\r\ncurrentFile = \"../current/PECOS.DMEPAR.GLOB.EXTRACT\"\r\nif !File.directory?(priorLocation)\r\n   puts \"The folder requested \"+priorLocation+ \" does not exist, please investigate\"\r\n   exit\r\nend\r\nif !File.directory?(currentLocation)\r\n   puts \"The folder requested \"+currentLocation+ \" does not exist, please investigate\"\r\n   exit\r\nend\r\nif !File.directory?(@saveLocation)\r\n   puts \"The folder requested \"+ @saveLocation + \" does not exist, please investigate\"\r\n   exit\r\nend\r\npriorLst = Dir.entries(priorLocation)\r\n#puts priorLst\r\ncurrentLst = Dir.entries(currentLocation)\r\n\r\n# Checks if the files are identical\r\n if FileUtils.compare_file(priorFile, currentFile)\r\n\tputs \"\\n!!Warning!!\\n\\nThe current and prior data files are identical.\\nPlease verify that the correct files were used then confirm with the technical team that the files should have the same content\\nThe Delta file will be empty.\"\r\n\tFile.open(@log_mFilename, 'w') { |f| \r\n\t\tf.write(\"no change\") }\r\n\tabort \"Ending Script\"\r\nend\r\n\r\n# Create arrays\r\n   priorArray = loadArray(priorFile)\r\n   priorDate = fileDate(priorFile)\r\n   currentArray = loadArray(currentFile)\r\n   currentDate = fileDate(currentFile)\r\n \r\n  # Calculate changes between arrays. Create arrays for PID of each listing \r\n   deleted = priorArray - currentArray\r\n   added = currentArray - priorArray\r\n   deletedPID = getID(deleted)\r\n   addedPID = getID(added)\r\n   \r\n\r\n   \r\n\r\n# Determine which changed items were deleted by checking if it is exists in both added and deleted arrays\r\n   deleted.each do |x|\r\n      if !addedPID.include?(x[0..9].to_s)\r\n         a = x[0..9] + \" -Deleted- \" + x [10..-1]\r\n         b = \" -Deleted- \" + x\r\n      else\r\n         a = x[0..9] + \" Prior     \" + x [10..-1]\r\n#         b = \" Prior     \" + x\r\n      end\r\n#      a = a.insert 151, \" \" #spacer between state and zip\r\n      outputArray<<a\r\n      if b!=nil\r\n         mOutputArray<<b\r\n      end\r\n   end\r\n \r\n\r\n\r\n# Determine which changed items were added by checking if it is exists in both added and deleted arrays\r\n   added.each do |x|\r\n      if !deletedPID.include?(x[0..9].to_s)\r\n         a = x[0..9] + \" + Added + \" + x [10..-1]\r\n         b = \" + Added + \" + x\r\n      else\r\n         a = x[0..9] +  \" New Data  \"+ x [10..-1]\r\n         b = \" New Data  \" + x\r\n      end\r\n#      a = a.insert 151, \" \" #spacer between state and zip\r\n      outputArray<<a\r\n\t  puts \"#{a[0..40]}\"\r\n      if b!=nil\r\n      \t mOutputArray<<b\r\n\t\t   puts \"#{b[0..40]}\"\r\n      end\r\n   end\r\n\r\n# Sort the array based on Provider and change type\r\noutputArray.sort!\r\nmOutputArray.sort!\r\n#puts mOutputArray\r\n\r\n# Compute the number of adds, deletes, and changed records\r\noutputArray.each do |x|\r\n   if x[10..20]==\" + Added + \"\r\n      adds=adds+1\r\n   end\r\n   if x[10..20]==\" -Deleted- \"\r\n      deletes=deletes+1\r\n   end\r\n   if x[10..20]==\" Prior     \"\r\n      changeItems=changeItems+1\r\n      \r\n   end\r\nend\r\n\r\n# Compute the number of adds, deletes, and changed records (delete prior data)\r\nmOutputArray.each do |x|\r\n   if x[0..10]==\" + Added + \"\r\n      mAdds=mAdds+1\r\n   end\r\n   if x[0..10]==\" -Deleted- \"\r\n      mDeletes=mDeletes+1\r\n   end\r\n   if x[0..10]==\" New Data  \"\r\n      mChangeItems=mChangeItems+1\r\n      \r\n   end\r\nend\r\n\r\n\r\n#\r\n#   Generate Report\r\n#\r\n\r\n#File.open(@log_filename, 'u9i-') {|f| \r\nFile.open(@log_filename, 'w') {|f| \r\n   f.write(\"Supplier Input File Delta Report\\n\")\r\n   f.write(\"Report Run: \" + Time.now.to_s+\"\\n\\n\")\r\n   \r\n   f.write(\"Prior File name: \" + priorFile + \"\\n\") #Calculate Prior File Name\r\n   f.write(\"Prior File record count excluding header: \" + priorArray.size.to_s+\"\\n\")\r\n   f.write(\"Prior File Date: \"+ File.mtime(priorFile).strftime(\"%Y/%m/%d  %H:%M:%S\")+\"\\n\\n\")\r\n   \r\n   f.write(\"Current File name: \" + currentFile+ \"\\n\") #Calculate Current File Name\r\n   f.write(\"Current File record count: \" + currentArray.size.to_s+\"\\n\")\r\n   f.write(\"Current File Date: \" + File.mtime(currentFile).strftime(\"%Y/%m/%d  %H:%M:%S\")+\"\\n\\n\")\r\n   \r\n   f.write(\"Number of added Suppliers: \" + adds.to_s+\"\\n\")\r\n   f.write(\"Number of deleted Suppliers: \" + deletes.to_s+\"\\n\")\r\n   f.write(\"Number of changed Suppliers: \" + changeItems.to_s+\"\\n\\n\")}\r\n  \r\n\r\nFileUtils.copy(@log_filename, @log_mhFilename) \r\n\r\nFile.open(@log_filename, 'w') {|f| \r\n outputArray.each do |x|\r\n    if x[0..9]==priorPID\r\n       f.write(x + \"\\n\\n\")\r\n    else\r\n       f.write(\"\\n\" + x + \"\\n\")\r\n    end\r\n    priorPID = x[0..9]\r\n end}\r\n  \r\n File.open(@log_mFilename, 'w') {|f| \r\n mOutputArray.each do |x|\r\n        f.write(x + \"\\n\")\r\n end}\r\n \r\n \r\n  puts(\"Supplier Input File Delta Report\\n\")\r\n puts(\"Report Run: \" + Time.now.to_s+\"\\n\\n\")\r\n   \r\n puts(\"Prior File name: \" + priorFile + \"\\n\") #Calculate Prior File Name\r\n puts(\"Prior File record count excluding header: \" + priorArray.size.to_s+\"\\n\")\r\n puts(\"Prior File Date: \"+ File.mtime(priorFile).strftime(\"%Y/%m/%d  %H:%M:%S\")+\"\\n\\n\")\r\n   \r\n puts(\"Current File name: \" + currentFile+ \"\\n\") #Calculate Current File Name\r\n puts(\"Current File record count: \" + currentArray.size.to_s+\"\\n\")\r\n puts(\"Current File Date: \" + File.mtime(currentFile).strftime(\"%Y/%m/%d  %H:%M:%S\")+\"\\n\\n\")\r\n   \r\n puts(\"Number of added Suppliers: \" + adds.to_s+\"\\n\")\r\n puts(\"Number of deleted Suppliers: \" + deletes.to_s+\"\\n\")\r\n puts(\"Number of changed Suppliers: \" + changeItems.to_s+\"\\n\\n\")\r\n \r\nputs \"Finish creating output data \\n\"\r\nprint 'Do you wish to execute the DB test for supplier ? (Y/N)'\r\n\t\r\n\tdoDB = gets.strip!\r\nif doDB.upcase == 'Y' then\r\n\tsystem (\"ruby OPS-1267-SupplierWebDB.rb\")\r\nend\r\n\r\n# Clean up extracted files\r\n#File.delete(priorLocation+priorZipFileName)\r\n#File.delete(currentLocation+currentZipFileName)\r\n","defaultMarkerLayerId":"0","markerLayers":{"0":{"id":"0","maintainHistory":false,"markersById":{},"version":2},"1":{"id":"1","maintainHistory":false,"markersById":{},"version":2},"2":{"id":"2","maintainHistory":true,"markersById":{"1":{"range":{"start":{"row":0,"column":0},"end":{"row":0,"column":0}},"properties":{"type":"selection","preserveFolds":true},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}},"version":2},"4":{"id":"4","maintainHistory":false,"markersById":{},"version":2},"6":{"id":"6","maintainHistory":false,"markersById":{},"version":2},"8":{"id":"8","maintainHistory":false,"markersById":{},"version":2}},"nextMarkerLayerId":9,"history":{"version":3,"nextCheckpointId":1,"undoStack":[],"redoStack":[]},"encoding":"utf8","filePath":"C:\\automation\\ops\\Ruby\\supplier\\scripts\\OPS-1267-SupplierDelta.rb","digestWhenLastPersisted":"e6933db2456296ad4ca314816811bbad746b8814","preferredLineEnding":null,"nextMarkerId":2,"deserializer":"TextBuffer","version":5},{"id":"ca7de71082940fbe2c82f723ebd86b48","text":"#  Program to test the Supplier database for changes via webservice calls\r\n#    This program uses the output report from SupplierDataDelta.rb\r\n#\r\n#  Created 12/31/2013 by Adam Stetser\r\n# Update 05/31/2015 - Todd Jones - Changed the way the script retries when the webservice is unstable.\r\n# Modified 8/4/2015 Brent Asher - changed to only write to output file on failures\r\n#\t8/11/2015 Brent Asher, Moved menu and call to web services to helper file, added indicators for program name\r\n#\t\tand environment on screen\r\n\r\nrequire 'curb'\r\nrequire 'nokogiri'\r\n#require 'win32console' # Uncomment this line if ruby -v returns version lower than 2.0\r\nrequire_relative 'SUPRubyHelpers'\r\n\r\n@local_filename\r\n\r\ndef filename(d)\r\n   local_filename1 = \"../output/OPS-1267-SupplierWebDB\" #need to have file name change by day\r\n   filedate = d.strftime(\"%m%d%Y\")\r\n   local_filename2 = '.txt'\r\n   @local_filename = local_filename1+filedate+local_filename2\r\nend\r\n\r\nt=Time.now\r\nfilename(t)\r\nenv=String.new\r\ndbDba_name = String.new\r\nadded_count = 0\r\ndeleted_count = 0\r\nchanged_count = 0\r\ntotal_count = 0\r\npassed_count = 0\r\nfailed_count = 0\r\n\r\n# puts \"Monitoring in process\"\r\n# puts \"Supplier DB Webservice test\"\r\nTitle=\"OPS-1267 Supplier Web DB Checking\"\r\nurl=getenv(Title)\r\nenv=url+\"/supplierservices/Provider.svc/GetProvidersByIDsXML\"\r\n\r\ndelta_file = Dir.glob(\"../output/Supplier_Ruby_DeltaAuto*\")\r\nfile_location = delta_file[-1].gsub(\"/\", \"\\\\\")\r\n\r\n#Checks the DeltaAuto file for the \"no change\" tag to abort the script.\r\ntext=File.open(file_location).read\r\nif text == \"no change\"\r\n\tputs \"\\n!!Warning!!\\n\\nThe were no detected changes within the delta file.\\nPlease ensure that the correct current and prior input files were used.\\nConfirm with the technical team that the files should have the same content.\"\r\n\tFile.open(@local_filename, 'w') { |f|\r\n\t\tf.write(\"There were no changes detected within #{file_location}\\n\")\r\n\t\t\tf.write(\"The likely cause is the current and prior pecos files are identical.\\nPlease confirm with the technical team that this is expected.\")}\r\n\tabort \"Ending script\"\r\nend\r\nputs \"Using #{file_location} as the input delta file\\n\\n\"\r\nputs \"Using #{url} as the environment \\n\\n\"\r\n\r\n# puts \"Enter the number for the environment you are testing\"\r\n# puts \"1 medicare-prod-predeploy.cgifederal.com\"\r\n# puts \"2 QA.medicare.gov\"\r\n# puts \"3 Staging.medicare.gov\"\r\n# puts \"4 www.medicare.gov\"\r\n# valid = false\r\n# until valid\r\n# environment = gets\r\n# environment.strip!\r\n\r\n# case environment\r\n# when \"1\"\r\n\t# env = \"medicare-prod-predeploy.cgifederal.com/supplierservices/Provider.svc/GetProvidersByIDsXML\"\r\n\t# valid = true\r\n# when \"2\"\r\n   # env = \"qa.medicare.gov/supplierservices/Provider.svc/GetProvidersByIDsXML\"\r\n   # valid = true\r\n# when \"3\"\r\n   # env = \"staging.medicare.gov/supplierservices/Provider.svc/GetProvidersByIDsXML\"\r\n   # valid = true\r\n# when \"4\"\r\n   # env = \"www.medicare.gov/supplierservices/Provider.svc/GetProvidersByIDsXML\"\r\n   # valid = true\r\n# else\r\n   # puts \"Invalid input\"\r\n# end\r\n# end\r\n\r\noutputFile = File.open(@local_filename, 'w')\r\noutputFile.write(\r\n\"Supplier DB Validation\"+\"\\n\"+\r\nt.strftime(\"%m/%d/%Y %H:%M\")+\"\\n\"+\r\nurl+\"\\n\\n\"+\r\n\"Result  Change  ID        Differences\"+\"\\n\")\r\n\r\n#read SupplierDataDelta file by record\r\nFile.foreach(file_location) {|deltaRecord|\r\n\r\n\r\n##parse record\r\n   action = deltaRecord[0..9].strip\r\n   deltaID = deltaRecord[11..20].strip\r\n   deltaName = deltaRecord[30..99].strip\r\n   deltaDba_name = deltaRecord[100..169].strip\r\n   deltaAdr1 = deltaRecord[170..224].strip\r\n   deltaAdr2 = deltaRecord[225..279].strip\r\n   deltaCity = deltaRecord[280..309].strip\r\n   deltaState = deltaRecord[310..311].strip\r\n   deltaZip = deltaRecord[312..316].strip\r\n   deltaPhone = deltaRecord[327..336].strip.insert(6,'-').insert(3,'-')\r\n\r\n   deltaRecord = [deltaID, deltaName, deltaDba_name, deltaAdr1, deltaAdr2, deltaCity, deltaState, deltaZip, deltaPhone]\r\n\r\n\r\n#Make the webservice call and if it fails, wait 15 secs and try one more time\r\n\r\n#httpstring=\"https://#{env}/#{deltaID}/#{deltaCBSA}/#{deltaCTGY}\"\r\nhttpstring=\"https://#{env}/#{deltaID}\"\r\n\r\n\t# begin\r\n\t\t# response = Curl::Easy.new(httpstring)\r\n\t\t# response.ssl_verify_peer = false\r\n\t\t# response.perform do |curl|\r\n\t\t# curl.headers[\"cookie\"] = \"ASPSessionKey=\"\r\n\t\t# end\r\n\t# rescue\r\n\t\t# tries ||= 5\r\n        # puts \"There was an issue with the connection, waiting 30 seconds and trying again\"\r\n        # sleep 30\r\n\t\t# if tries > 0\r\n\t\t\t# retry\r\n\t\t# else\r\n\t\t\t# abort(\"Webservice connection is unstable. aborting test. Please try again later.\\a\\a\")\r\n\t\t# end\r\n\t# end\r\n\tresponse=getWebResponse(httpstring)\r\n   html_doc = Nokogiri::HTML(response.body_str)\r\n\r\n\r\n   dbID = html_doc.css('id').text\r\n   dbName = html_doc.css('name').text\r\n\r\n   html_doc.css('supl keyvalueofstringstring key').each do |node1|\r\n      if node1.text=='dba_name'\r\n            dbDba_name = node1.next.text #assuming that the value is the next node, returns the dba_name\r\n      end\r\n   end\r\n\r\n   dbDba_name\r\n   dbAdr1 = html_doc.css('adr1').text\r\n   dbAdr2 = html_doc.css('adr2').text\r\n   dbCity = html_doc.css('city').text\r\n   dbState = html_doc.css('state').text\r\n   dbZip = html_doc.css('zip').text\r\n   dbPhone = html_doc.css('phone').text.gsub(/[()-]/,\"\").gsub(/\\s/,\"\")\r\n   if !dbPhone.empty?\r\n      dbPhone = dbPhone.insert(6,'-').insert(3,'-')\r\n   end\r\n\r\n   dbRecord = [dbID, dbName, dbDba_name, dbAdr1, dbAdr2, dbCity, dbState, dbZip, dbPhone]\r\n\r\n\r\n# Generate Testing Results Report\r\n\r\n   case action\r\n   when \"+ Added +\"\r\n      added_count = added_count +1\r\n      missing = deltaRecord - dbRecord\r\n\r\n      missing.compact!\r\n      if missing.empty?\r\n         print \"PASSED + Added + \"+deltaID +\"\\n\"\r\n\r\n         #outputFile.write(\"PASSED +Added+ \"+deltaID +\"\\n\")\r\n         passed_count = passed_count + 1\r\n      else\r\n         print \"FAILED + Added + #{deltaID} \"\r\n         outputFile.write(\"FAILED +Added+ #{deltaID} \")\r\n         missing.each do |item|\r\n            print item+\" \"\r\n            outputFile.write(item + \" \")\r\n         end\r\n         print \"\\n\"\r\n         outputFile.write(\"\\n\")\r\n         failed_count = failed_count+1\r\n      end\r\n   when \"-Deleted-\"\r\n      dbRecord.reject! {|c| c.empty?}  #remove blank entries\r\n      deleted_count = deleted_count +1\r\n      if dbRecord.empty?\r\n         print \"PASSED -Deleted- \"+deltaID +\"\\n\"\r\n         #outputFile.write(\"PASSED -Deleted- \"+deltaID +\"\\n\")\r\n         passed_count = passed_count + 1\r\n      else\r\n         print \"FAILED -Deleted- \"+\" \"\r\n         outputFile.write(\"FAILED -Deleted- \")\r\n         dbRecord.each do |item|\r\n            print item+\" \"\r\n            outputFile.write(item + \" \")\r\n\t\tend\r\n         print \"\\n\"\r\n         outputFile.write(\"\\n\")\r\n         failed_count = failed_count+1\r\n      end\r\n\r\n   when \"New Data\"\r\n      missing = deltaRecord - dbRecord\r\n      changed_count = changed_count + 1\r\n      missing.compact!\r\n      if missing.empty?\r\n         print \"PASSED\"+\" New Data \"+deltaID +\"\\n\"\r\n         #outputFile.write(\"PASSED New Data \" +deltaID+\"\\n\")\r\n         passed_count = passed_count + 1\r\n      else\r\n         print \"FAILED New Data \"+deltaID +\" \"\r\n         outputFile.write(\"FAILED New Data \"+deltaID +\" \")\r\n         missing.each do |item|\r\n            print item+\" \"\r\n            outputFile.write(item +\" \")\r\n         end\r\n         print \"\\n\"\r\n         outputFile.write(\"\\n\")\r\n         failed_count = failed_count+1\r\n      end\r\n\r\n\r\n   else\r\n      puts \"Invalid input\"\r\n\r\n   end\r\n\r\n# Cleanup and End SupplierDataDelta read loop with brace below\r\ndbDba_name = \"\"\r\n}\r\n\r\ntotal_count = added_count + deleted_count + changed_count\r\nt = Time.now\r\noutputFile.write(\r\n\"\\n #{Title}\"+\"\\n\"+t.strftime(\"%m/%d/%Y %H:%M\")+\"\\n #{env}+\\n\"+\r\n\"Number Added = \"+added_count.to_s+\"\\n\"+\r\n\"Number Deleted = \"+deleted_count.to_s+\"\\n\"+\r\n\"Number Changed = \"+changed_count.to_s+\"\\n\"+\r\n\"Total = \"+total_count.to_s+\"\\n\\n\"+\r\n\"PASSSED = \"+passed_count.to_s+\"\\n\"+\r\n\"FAILED = \"+failed_count.to_s+\"\\n\\n\")\r\n\r\nputs \"\\nUsing #{file_location} as the input delta file\\n\\n\"\r\nputs \"Using #{url} as the environment \\n\\n\"\r\n\r\nputs \"#{Title}\"+\"\\n\"+t.strftime(\"%m/%d/%Y %H:%M\")+\"\\n #{env}+\\n\"\r\nputs \"Number Added = #{added_count.to_s}\\n\"\r\nputs \"Number Deleted = #{deleted_count.to_s}\\n\"\r\nputs \"Number Changed = #{changed_count.to_s}\\n\"\r\nputs \"Total = #{total_count.to_s}\\n\\n\"\r\nputs \"PASSSED = #{passed_count.to_s}\\n\"\r\nputs \"FAILED = #{failed_count.to_s}\\n\\n\"\r\n\r\noutputFile.close\r\nputs \"Done\\a\"\r\n","defaultMarkerLayerId":"0","markerLayers":{"0":{"id":"0","maintainHistory":false,"markersById":{"45":{"range":{"start":{"row":0,"column":0},"end":{"row":254,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"58":{"range":{"start":{"row":0,"column":0},"end":{"row":254,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":false,"invalidate":"overlap"}},"version":2},"1":{"id":"1","maintainHistory":false,"markersById":{},"version":2},"2":{"id":"2","maintainHistory":true,"markersById":{"1":{"range":{"start":{"row":14,"column":15},"end":{"row":14,"column":15}},"properties":{"type":"selection","goalScreenRange":null,"clip":"forward","preserveFolds":true},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}},"version":2},"4":{"id":"4","maintainHistory":false,"markersById":{},"version":2},"6":{"id":"6","maintainHistory":false,"markersById":{},"version":2}},"nextMarkerLayerId":7,"history":{"version":3,"nextCheckpointId":184,"undoStack":[{"type":"group-start","snapshot":{"2":{"1":{"range":[[11,0],[11,0]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[11,0],[11,0]],"newRange":[[11,0],[11,1]],"oldText":"","newText":"#"}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[11,1],[11,1]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[11,1],[11,1]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[238,36],[238,37]],"newRange":[[238,36],[238,36]],"oldText":" ","newText":""}},{"type":"change","content":{"oldRange":[[237,35],[237,37]],"newRange":[[237,35],[237,35]],"oldText":"  ","newText":""}},{"type":"change","content":{"oldRange":[[225,0],[225,3]],"newRange":[[225,0],[225,0]],"oldText":"   ","newText":""}},{"type":"change","content":{"oldRange":[[223,0],[223,6]],"newRange":[[223,0],[223,0]],"oldText":"      ","newText":""}},{"type":"change","content":{"oldRange":[[220,0],[220,6]],"newRange":[[220,0],[220,0]],"oldText":"      ","newText":""}},{"type":"change","content":{"oldRange":[[219,0],[219,6]],"newRange":[[219,0],[219,0]],"oldText":"      ","newText":""}},{"type":"change","content":{"oldRange":[[199,0],[199,6]],"newRange":[[199,0],[199,0]],"oldText":"      ","newText":""}},{"type":"change","content":{"oldRange":[[178,31],[178,32]],"newRange":[[178,31],[178,31]],"oldText":" ","newText":""}},{"type":"change","content":{"oldRange":[[168,59],[168,60]],"newRange":[[168,59],[168,59]],"oldText":" ","newText":""}},{"type":"change","content":{"oldRange":[[159,14],[159,15]],"newRange":[[159,14],[159,14]],"oldText":" ","newText":""}},{"type":"change","content":{"oldRange":[[158,0],[158,3]],"newRange":[[158,0],[158,0]],"oldText":"   ","newText":""}},{"type":"change","content":{"oldRange":[[156,0],[156,3]],"newRange":[[156,0],[156,0]],"oldText":"   ","newText":""}},{"type":"change","content":{"oldRange":[[155,0],[155,3]],"newRange":[[155,0],[155,0]],"oldText":"   ","newText":""}},{"type":"change","content":{"oldRange":[[153,0],[153,3]],"newRange":[[153,0],[153,0]],"oldText":"   ","newText":""}},{"type":"change","content":{"oldRange":[[133,0],[133,4]],"newRange":[[133,0],[133,0]],"oldText":"    ","newText":""}},{"type":"change","content":{"oldRange":[[117,30],[117,31]],"newRange":[[117,30],[117,30]],"oldText":" ","newText":""}},{"type":"change","content":{"oldRange":[[115,41],[115,42]],"newRange":[[115,41],[115,41]],"oldText":" ","newText":""}},{"type":"change","content":{"oldRange":[[114,8],[114,10]],"newRange":[[114,8],[114,8]],"oldText":"  ","newText":""}},{"type":"change","content":{"oldRange":[[105,0],[105,3]],"newRange":[[105,0],[105,0]],"oldText":"   ","newText":""}},{"type":"change","content":{"oldRange":[[91,42],[91,43]],"newRange":[[91,42],[91,42]],"oldText":" ","newText":""}},{"type":"change","content":{"oldRange":[[83,44],[83,45]],"newRange":[[83,44],[83,44]],"oldText":" ","newText":""}},{"type":"change","content":{"oldRange":[[65,18],[65,19]],"newRange":[[65,18],[65,18]],"oldText":" ","newText":""}},{"type":"change","content":{"oldRange":[[47,38],[47,39]],"newRange":[[47,38],[47,38]],"oldText":" ","newText":""}},{"type":"change","content":{"oldRange":[[45,22],[45,23]],"newRange":[[45,22],[45,22]],"oldText":" ","newText":""}},{"type":"change","content":{"oldRange":[[40,59],[40,60]],"newRange":[[40,59],[40,59]],"oldText":" ","newText":""}},{"type":"change","content":{"oldRange":[[15,0],[15,1]],"newRange":[[15,0],[15,0]],"oldText":" ","newText":""}},{"type":"change","content":{"oldRange":[[253,13],[253,13]],"newRange":[[253,13],[254,0]],"oldText":"","newText":"\n"}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[11,1],[11,1]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[11,23],[11,23]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[11,23],[11,23]],"newRange":[[11,23],[11,24]],"oldText":"","newText":" "}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[11,24],[11,24]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[11,24],[11,24]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[11,24],[11,24]],"newRange":[[11,24],[11,25]],"oldText":"","newText":"#"}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[11,25],[11,25]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[11,25],[11,25]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[11,25],[11,25]],"newRange":[[11,25],[11,26]],"oldText":"","newText":"t"}},{"type":"change","content":{"oldRange":[[11,26],[11,26]],"newRange":[[11,26],[11,27]],"oldText":"","newText":"h"}},{"type":"change","content":{"oldRange":[[11,27],[11,27]],"newRange":[[11,27],[11,28]],"oldText":"","newText":"i"}},{"type":"change","content":{"oldRange":[[11,28],[11,28]],"newRange":[[11,28],[11,29]],"oldText":"","newText":"s"}},{"type":"change","content":{"oldRange":[[11,29],[11,29]],"newRange":[[11,29],[11,30]],"oldText":"","newText":" "}},{"type":"change","content":{"oldRange":[[11,30],[11,30]],"newRange":[[11,30],[11,31]],"oldText":"","newText":"l"}},{"type":"change","content":{"oldRange":[[11,31],[11,31]],"newRange":[[11,31],[11,32]],"oldText":"","newText":"i"}},{"type":"change","content":{"oldRange":[[11,32],[11,32]],"newRange":[[11,32],[11,33]],"oldText":"","newText":"n"}},{"type":"change","content":{"oldRange":[[11,33],[11,33]],"newRange":[[11,33],[11,34]],"oldText":"","newText":"e"}},{"type":"change","content":{"oldRange":[[11,34],[11,34]],"newRange":[[11,34],[11,35]],"oldText":"","newText":" "}},{"type":"change","content":{"oldRange":[[11,35],[11,35]],"newRange":[[11,35],[11,36]],"oldText":"","newText":"m"}},{"type":"change","content":{"oldRange":[[11,36],[11,36]],"newRange":[[11,36],[11,37]],"oldText":"","newText":"a"}},{"type":"change","content":{"oldRange":[[11,37],[11,37]],"newRange":[[11,37],[11,38]],"oldText":"","newText":"y"}},{"type":"change","content":{"oldRange":[[11,38],[11,38]],"newRange":[[11,38],[11,39]],"oldText":"","newText":" "}},{"type":"change","content":{"oldRange":[[11,39],[11,39]],"newRange":[[11,39],[11,40]],"oldText":"","newText":"n"}},{"type":"change","content":{"oldRange":[[11,40],[11,40]],"newRange":[[11,40],[11,41]],"oldText":"","newText":"o"}},{"type":"change","content":{"oldRange":[[11,41],[11,41]],"newRange":[[11,41],[11,42]],"oldText":"","newText":"t"}},{"type":"change","content":{"oldRange":[[11,42],[11,42]],"newRange":[[11,42],[11,43]],"oldText":"","newText":" "}},{"type":"change","content":{"oldRange":[[11,43],[11,43]],"newRange":[[11,43],[11,44]],"oldText":"","newText":"m"}},{"type":"change","content":{"oldRange":[[11,44],[11,44]],"newRange":[[11,44],[11,45]],"oldText":"","newText":"e"}},{"type":"change","content":{"oldRange":[[11,44],[11,45]],"newRange":[[11,44],[11,44]],"oldText":"e","newText":""}},{"type":"change","content":{"oldRange":[[11,43],[11,44]],"newRange":[[11,43],[11,43]],"oldText":"m","newText":""}},{"type":"change","content":{"oldRange":[[11,43],[11,43]],"newRange":[[11,43],[11,44]],"oldText":"","newText":"b"}},{"type":"change","content":{"oldRange":[[11,44],[11,44]],"newRange":[[11,44],[11,45]],"oldText":"","newText":"e"}},{"type":"change","content":{"oldRange":[[11,45],[11,45]],"newRange":[[11,45],[11,46]],"oldText":"","newText":" "}},{"type":"change","content":{"oldRange":[[11,46],[11,46]],"newRange":[[11,46],[11,47]],"oldText":"","newText":"n"}},{"type":"change","content":{"oldRange":[[11,47],[11,47]],"newRange":[[11,47],[11,48]],"oldText":"","newText":"e"}},{"type":"change","content":{"oldRange":[[11,48],[11,48]],"newRange":[[11,48],[11,49]],"oldText":"","newText":"c"}},{"type":"change","content":{"oldRange":[[11,49],[11,49]],"newRange":[[11,49],[11,50]],"oldText":"","newText":"e"}},{"type":"change","content":{"oldRange":[[11,50],[11,50]],"newRange":[[11,50],[11,51]],"oldText":"","newText":"s"}},{"type":"change","content":{"oldRange":[[11,51],[11,51]],"newRange":[[11,51],[11,52]],"oldText":"","newText":"s"}},{"type":"change","content":{"oldRange":[[11,52],[11,52]],"newRange":[[11,52],[11,53]],"oldText":"","newText":"a"}},{"type":"change","content":{"oldRange":[[11,53],[11,53]],"newRange":[[11,53],[11,54]],"oldText":"","newText":"r"}},{"type":"change","content":{"oldRange":[[11,54],[11,54]],"newRange":[[11,54],[11,55]],"oldText":"","newText":"y"}},{"type":"change","content":{"oldRange":[[11,55],[11,55]],"newRange":[[11,55],[11,56]],"oldText":"","newText":" "}},{"type":"change","content":{"oldRange":[[11,56],[11,56]],"newRange":[[11,56],[11,57]],"oldText":"","newText":"a"}},{"type":"change","content":{"oldRange":[[11,57],[11,57]],"newRange":[[11,57],[11,58]],"oldText":"","newText":"s"}},{"type":"change","content":{"oldRange":[[11,58],[11,58]],"newRange":[[11,58],[11,59]],"oldText":"","newText":" "}},{"type":"change","content":{"oldRange":[[11,59],[11,59]],"newRange":[[11,59],[11,60]],"oldText":"","newText":"w"}},{"type":"change","content":{"oldRange":[[11,60],[11,60]],"newRange":[[11,60],[11,61]],"oldText":"","newText":"e"}},{"type":"change","content":{"oldRange":[[11,61],[11,61]],"newRange":[[11,61],[11,62]],"oldText":"","newText":" "}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[11,62],[11,62]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[11,62],[11,62]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[11,62],[11,62]],"newRange":[[11,62],[11,63]],"oldText":"","newText":"u"}},{"type":"change","content":{"oldRange":[[11,63],[11,63]],"newRange":[[11,63],[11,64]],"oldText":"","newText":"p"}},{"type":"change","content":{"oldRange":[[11,64],[11,64]],"newRange":[[11,64],[11,65]],"oldText":"","newText":"g"}},{"type":"change","content":{"oldRange":[[11,65],[11,65]],"newRange":[[11,65],[11,66]],"oldText":"","newText":"r"}},{"type":"change","content":{"oldRange":[[11,66],[11,66]],"newRange":[[11,66],[11,67]],"oldText":"","newText":"a"}},{"type":"change","content":{"oldRange":[[11,67],[11,67]],"newRange":[[11,67],[11,68]],"oldText":"","newText":"d"}},{"type":"change","content":{"oldRange":[[11,68],[11,68]],"newRange":[[11,68],[11,69]],"oldText":"","newText":"e"}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[11,69],[11,69]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[11,56],[11,69]],"properties":{"type":"selection","goalScreenRange":null},"reversed":true,"tailed":true,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[11,56],[11,69]],"newRange":[[11,56],[11,57]],"oldText":"as we upgrade","newText":"a"}},{"type":"change","content":{"oldRange":[[11,57],[11,57]],"newRange":[[11,57],[11,58]],"oldText":"","newText":"f"}},{"type":"change","content":{"oldRange":[[11,58],[11,58]],"newRange":[[11,58],[11,59]],"oldText":"","newText":"t"}},{"type":"change","content":{"oldRange":[[11,59],[11,59]],"newRange":[[11,59],[11,60]],"oldText":"","newText":"e"}},{"type":"change","content":{"oldRange":[[11,60],[11,60]],"newRange":[[11,60],[11,61]],"oldText":"","newText":"r"}},{"type":"change","content":{"oldRange":[[11,61],[11,61]],"newRange":[[11,61],[11,62]],"oldText":"","newText":" "}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[11,62],[11,62]],"properties":{"type":"selection","goalScreenRange":null,"clip":"forward"},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[11,62],[11,62]],"properties":{"type":"selection","goalScreenRange":null,"clip":"forward"},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[11,62],[11,62]],"newRange":[[11,62],[11,63]],"oldText":"","newText":"R"}},{"type":"change","content":{"oldRange":[[11,63],[11,63]],"newRange":[[11,63],[11,64]],"oldText":"","newText":"u"}},{"type":"change","content":{"oldRange":[[11,64],[11,64]],"newRange":[[11,64],[11,65]],"oldText":"","newText":"b"}},{"type":"change","content":{"oldRange":[[11,65],[11,65]],"newRange":[[11,65],[11,66]],"oldText":"","newText":"y"}},{"type":"change","content":{"oldRange":[[11,66],[11,66]],"newRange":[[11,66],[11,67]],"oldText":"","newText":" "}},{"type":"change","content":{"oldRange":[[11,67],[11,67]],"newRange":[[11,67],[11,68]],"oldText":"","newText":"2"}},{"type":"change","content":{"oldRange":[[11,68],[11,68]],"newRange":[[11,68],[11,69]],"oldText":"","newText":"."}},{"type":"change","content":{"oldRange":[[11,69],[11,69]],"newRange":[[11,69],[11,70]],"oldText":"","newText":"0"}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[11,70],[11,70]],"properties":{"type":"selection","goalScreenRange":null,"clip":"forward"},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[24,11],[24,11]],"properties":{"type":"selection","goalScreenRange":null,"clip":"forward"},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[24,11],[24,11]],"newRange":[[24,11],[24,12]],"oldText":"","newText":"."}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[24,12],[24,12]],"properties":{"type":"selection","goalScreenRange":null,"clip":"forward"},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[24,12],[24,12]],"properties":{"type":"selection","goalScreenRange":null,"clip":"forward"},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[24,11],[24,12]],"newRange":[[24,11],[24,11]],"oldText":".","newText":""}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[24,11],[24,11]],"properties":{"type":"selection","goalScreenRange":null,"clip":"forward"},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[24,11],[24,11]],"properties":{"type":"selection","goalScreenRange":null,"clip":"forward"},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[24,0],[24,0]],"newRange":[[24,0],[24,2]],"oldText":"","newText":"# "}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[24,13],[24,13]],"properties":{"type":"selection","goalScreenRange":null,"clip":"forward"},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[24,13],[24,13]],"properties":{"type":"selection","goalScreenRange":null,"clip":"forward"},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[24,0],[24,2]],"newRange":[[24,0],[24,0]],"oldText":"# ","newText":""}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[24,11],[24,11]],"properties":{"type":"selection","goalScreenRange":null,"clip":"forward"},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[11,70],[11,70]],"properties":{"type":"selection","goalScreenRange":null,"clip":"forward"},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[11,70],[11,70]],"newRange":[[11,70],[12,0]],"oldText":"","newText":"\n"}},{"type":"change","content":{"oldRange":[[12,0],[12,0]],"newRange":[[12,0],[12,0]],"oldText":"","newText":""}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[12,0],[12,0]],"properties":{"type":"selection","goalScreenRange":null,"clip":"forward"},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[12,0],[12,0]],"properties":{"type":"selection","goalScreenRange":null,"clip":"forward"},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[12,0],[12,0]],"newRange":[[12,0],[12,1]],"oldText":"","newText":"#"}},{"type":"change","content":{"oldRange":[[12,1],[12,1]],"newRange":[[12,1],[12,2]],"oldText":"","newText":"t"}},{"type":"change","content":{"oldRange":[[12,2],[12,2]],"newRange":[[12,2],[12,3]],"oldText":"","newText":"e"}},{"type":"change","content":{"oldRange":[[12,3],[12,3]],"newRange":[[12,3],[12,4]],"oldText":"","newText":"s"}},{"type":"change","content":{"oldRange":[[12,4],[12,4]],"newRange":[[12,4],[12,5]],"oldText":"","newText":"t"}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[12,5],[12,5]],"properties":{"type":"selection","goalScreenRange":null,"clip":"forward"},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[12,5],[12,5]],"properties":{"type":"selection","goalScreenRange":null,"clip":"forward","preserveFolds":true},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[12,5],[12,5]],"newRange":[[12,5],[12,6]],"oldText":"","newText":"2"}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[12,6],[12,6]],"properties":{"type":"selection","goalScreenRange":null,"clip":"forward","preserveFolds":true},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[12,0],[12,6]],"properties":{"type":"selection","goalScreenRange":null,"clip":"forward","preserveFolds":true},"reversed":true,"tailed":true,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[12,0],[12,6]],"newRange":[[12,0],[12,0]],"oldText":"#test2","newText":""}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[12,0],[12,0]],"properties":{"type":"selection","goalScreenRange":null,"clip":"forward","preserveFolds":true},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[12,0],[12,0]],"properties":{"type":"selection","goalScreenRange":null,"clip":"forward","preserveFolds":true},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[11,70],[12,0]],"newRange":[[11,70],[11,70]],"oldText":"\r\n","newText":""}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[11,70],[11,70]],"properties":{"type":"selection","goalScreenRange":null,"clip":"forward","preserveFolds":true},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[11,26],[11,70]],"properties":{"type":"selection","goalScreenRange":null,"clip":"forward","preserveFolds":true},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[11,26],[11,70]],"newRange":[[11,26],[11,26]],"oldText":"his line may not be necessary after Ruby 2.0","newText":""}},{"type":"change","content":{"oldRange":[[11,25],[11,26]],"newRange":[[11,25],[11,25]],"oldText":"t","newText":""}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[11,25],[11,25]],"properties":{"type":"selection","goalScreenRange":null,"clip":"forward","preserveFolds":true},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[11,25],[11,25]],"properties":{"type":"selection","goalScreenRange":null,"clip":"forward","preserveFolds":true},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[11,25],[11,25]],"newRange":[[11,25],[11,26]],"oldText":"","newText":" "}},{"type":"change","content":{"oldRange":[[11,26],[11,26]],"newRange":[[11,26],[11,27]],"oldText":"","newText":"U"}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[11,27],[11,27]],"properties":{"type":"selection","goalScreenRange":null,"clip":"forward","preserveFolds":true},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[11,27],[11,27]],"properties":{"type":"selection","goalScreenRange":null,"clip":"forward","preserveFolds":true},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[11,27],[11,27]],"newRange":[[11,27],[11,28]],"oldText":"","newText":"n"}},{"type":"change","content":{"oldRange":[[11,28],[11,28]],"newRange":[[11,28],[11,29]],"oldText":"","newText":"c"}},{"type":"change","content":{"oldRange":[[11,29],[11,29]],"newRange":[[11,29],[11,30]],"oldText":"","newText":"o"}},{"type":"change","content":{"oldRange":[[11,30],[11,30]],"newRange":[[11,30],[11,31]],"oldText":"","newText":"m"}},{"type":"change","content":{"oldRange":[[11,31],[11,31]],"newRange":[[11,31],[11,32]],"oldText":"","newText":"m"}},{"type":"change","content":{"oldRange":[[11,32],[11,32]],"newRange":[[11,32],[11,33]],"oldText":"","newText":"e"}},{"type":"change","content":{"oldRange":[[11,33],[11,33]],"newRange":[[11,33],[11,34]],"oldText":"","newText":"n"}},{"type":"change","content":{"oldRange":[[11,34],[11,34]],"newRange":[[11,34],[11,35]],"oldText":"","newText":"t"}},{"type":"change","content":{"oldRange":[[11,35],[11,35]],"newRange":[[11,35],[11,36]],"oldText":"","newText":" "}},{"type":"change","content":{"oldRange":[[11,36],[11,36]],"newRange":[[11,36],[11,37]],"oldText":"","newText":"t"}},{"type":"change","content":{"oldRange":[[11,37],[11,37]],"newRange":[[11,37],[11,38]],"oldText":"","newText":"h"}},{"type":"change","content":{"oldRange":[[11,38],[11,38]],"newRange":[[11,38],[11,39]],"oldText":"","newText":"i"}},{"type":"change","content":{"oldRange":[[11,39],[11,39]],"newRange":[[11,39],[11,40]],"oldText":"","newText":"s"}},{"type":"change","content":{"oldRange":[[11,40],[11,40]],"newRange":[[11,40],[11,41]],"oldText":"","newText":" "}},{"type":"change","content":{"oldRange":[[11,41],[11,41]],"newRange":[[11,41],[11,42]],"oldText":"","newText":"l"}},{"type":"change","content":{"oldRange":[[11,42],[11,42]],"newRange":[[11,42],[11,43]],"oldText":"","newText":"i"}},{"type":"change","content":{"oldRange":[[11,43],[11,43]],"newRange":[[11,43],[11,44]],"oldText":"","newText":"n"}},{"type":"change","content":{"oldRange":[[11,44],[11,44]],"newRange":[[11,44],[11,45]],"oldText":"","newText":"e"}},{"type":"change","content":{"oldRange":[[11,45],[11,45]],"newRange":[[11,45],[11,46]],"oldText":"","newText":" "}},{"type":"change","content":{"oldRange":[[11,46],[11,46]],"newRange":[[11,46],[11,47]],"oldText":"","newText":"i"}},{"type":"change","content":{"oldRange":[[11,47],[11,47]],"newRange":[[11,47],[11,48]],"oldText":"","newText":"f"}},{"type":"change","content":{"oldRange":[[11,48],[11,48]],"newRange":[[11,48],[11,49]],"oldText":"","newText":" "}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[11,49],[11,49]],"properties":{"type":"selection","goalScreenRange":null,"clip":"forward","preserveFolds":true},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[11,49],[11,49]],"properties":{"type":"selection","goalScreenRange":null,"clip":"forward","preserveFolds":true},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[11,49],[11,49]],"newRange":[[11,49],[11,51]],"oldText":"","newText":"\"\""}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[11,51],[11,51]],"properties":{"type":"selection","goalScreenRange":null,"clip":"forward","preserveFolds":true},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[11,50],[11,50]],"properties":{"type":"selection","goalScreenRange":null,"clip":"forward","preserveFolds":true},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[11,50],[11,50]],"newRange":[[11,50],[11,51]],"oldText":"","newText":"r"}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[11,51],[11,51]],"properties":{"type":"selection","goalScreenRange":null,"clip":"forward","preserveFolds":true},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[11,51],[11,51]],"properties":{"type":"selection","goalScreenRange":null,"clip":"forward","preserveFolds":true},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[11,50],[11,51]],"newRange":[[11,50],[11,50]],"oldText":"r","newText":""}},{"type":"change","content":{"oldRange":[[11,49],[11,50]],"newRange":[[11,49],[11,49]],"oldText":"\"","newText":""}},{"type":"change","content":{"oldRange":[[11,49],[11,50]],"newRange":[[11,49],[11,49]],"oldText":"\"","newText":""}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[11,49],[11,49]],"properties":{"type":"selection","goalScreenRange":null,"clip":"forward","preserveFolds":true},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[11,49],[11,49]],"properties":{"type":"selection","goalScreenRange":null,"clip":"forward","preserveFolds":true},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[11,49],[11,49]],"newRange":[[11,49],[11,50]],"oldText":"","newText":"r"}},{"type":"change","content":{"oldRange":[[11,50],[11,50]],"newRange":[[11,50],[11,51]],"oldText":"","newText":"u"}},{"type":"change","content":{"oldRange":[[11,51],[11,51]],"newRange":[[11,51],[11,52]],"oldText":"","newText":"b"}},{"type":"change","content":{"oldRange":[[11,52],[11,52]],"newRange":[[11,52],[11,53]],"oldText":"","newText":"y"}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[11,53],[11,53]],"properties":{"type":"selection","goalScreenRange":null,"clip":"forward","preserveFolds":true},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[11,53],[11,53]],"properties":{"type":"selection","goalScreenRange":null,"clip":"forward","preserveFolds":true},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[11,53],[11,53]],"newRange":[[11,53],[11,54]],"oldText":"","newText":" "}},{"type":"change","content":{"oldRange":[[11,54],[11,54]],"newRange":[[11,54],[11,55]],"oldText":"","newText":"-"}},{"type":"change","content":{"oldRange":[[11,55],[11,55]],"newRange":[[11,55],[11,56]],"oldText":"","newText":"v"}},{"type":"change","content":{"oldRange":[[11,56],[11,56]],"newRange":[[11,56],[11,57]],"oldText":"","newText":" "}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[11,57],[11,57]],"properties":{"type":"selection","goalScreenRange":null,"clip":"forward","preserveFolds":true},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[11,57],[11,57]],"properties":{"type":"selection","goalScreenRange":null,"clip":"forward","preserveFolds":true},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[11,57],[11,57]],"newRange":[[11,57],[11,58]],"oldText":"","newText":"r"}},{"type":"change","content":{"oldRange":[[11,58],[11,58]],"newRange":[[11,58],[11,59]],"oldText":"","newText":"e"}},{"type":"change","content":{"oldRange":[[11,59],[11,59]],"newRange":[[11,59],[11,60]],"oldText":"","newText":"t"}},{"type":"change","content":{"oldRange":[[11,60],[11,60]],"newRange":[[11,60],[11,61]],"oldText":"","newText":"u"}},{"type":"change","content":{"oldRange":[[11,61],[11,61]],"newRange":[[11,61],[11,62]],"oldText":"","newText":"r"}},{"type":"change","content":{"oldRange":[[11,62],[11,62]],"newRange":[[11,62],[11,63]],"oldText":"","newText":"n"}},{"type":"change","content":{"oldRange":[[11,63],[11,63]],"newRange":[[11,63],[11,64]],"oldText":"","newText":"s"}},{"type":"change","content":{"oldRange":[[11,64],[11,64]],"newRange":[[11,64],[11,65]],"oldText":"","newText":" "}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[11,65],[11,65]],"properties":{"type":"selection","goalScreenRange":null,"clip":"forward","preserveFolds":true},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[11,65],[11,65]],"properties":{"type":"selection","goalScreenRange":null,"clip":"forward","preserveFolds":true},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[11,65],[11,65]],"newRange":[[11,65],[11,66]],"oldText":"","newText":"v"}},{"type":"change","content":{"oldRange":[[11,66],[11,66]],"newRange":[[11,66],[11,67]],"oldText":"","newText":"e"}},{"type":"change","content":{"oldRange":[[11,67],[11,67]],"newRange":[[11,67],[11,68]],"oldText":"","newText":"r"}},{"type":"change","content":{"oldRange":[[11,68],[11,68]],"newRange":[[11,68],[11,69]],"oldText":"","newText":"s"}},{"type":"change","content":{"oldRange":[[11,69],[11,69]],"newRange":[[11,69],[11,70]],"oldText":"","newText":"i"}},{"type":"change","content":{"oldRange":[[11,70],[11,70]],"newRange":[[11,70],[11,71]],"oldText":"","newText":"o"}},{"type":"change","content":{"oldRange":[[11,71],[11,71]],"newRange":[[11,71],[11,72]],"oldText":"","newText":"n"}},{"type":"change","content":{"oldRange":[[11,72],[11,72]],"newRange":[[11,72],[11,73]],"oldText":"","newText":" "}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[11,73],[11,73]],"properties":{"type":"selection","goalScreenRange":null,"clip":"forward","preserveFolds":true},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[11,73],[11,73]],"properties":{"type":"selection","goalScreenRange":null,"clip":"forward","preserveFolds":true},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[11,73],[11,73]],"newRange":[[11,73],[11,74]],"oldText":"","newText":"l"}},{"type":"change","content":{"oldRange":[[11,74],[11,74]],"newRange":[[11,74],[11,75]],"oldText":"","newText":"o"}},{"type":"change","content":{"oldRange":[[11,75],[11,75]],"newRange":[[11,75],[11,76]],"oldText":"","newText":"w"}},{"type":"change","content":{"oldRange":[[11,76],[11,76]],"newRange":[[11,76],[11,77]],"oldText":"","newText":"e"}},{"type":"change","content":{"oldRange":[[11,77],[11,77]],"newRange":[[11,77],[11,78]],"oldText":"","newText":"r"}},{"type":"change","content":{"oldRange":[[11,78],[11,78]],"newRange":[[11,78],[11,79]],"oldText":"","newText":" "}},{"type":"change","content":{"oldRange":[[11,79],[11,79]],"newRange":[[11,79],[11,80]],"oldText":"","newText":"t"}},{"type":"change","content":{"oldRange":[[11,80],[11,80]],"newRange":[[11,80],[11,81]],"oldText":"","newText":"h"}},{"type":"change","content":{"oldRange":[[11,81],[11,81]],"newRange":[[11,81],[11,82]],"oldText":"","newText":"a"}},{"type":"change","content":{"oldRange":[[11,82],[11,82]],"newRange":[[11,82],[11,83]],"oldText":"","newText":"n"}},{"type":"change","content":{"oldRange":[[11,83],[11,83]],"newRange":[[11,83],[11,84]],"oldText":"","newText":" "}},{"type":"change","content":{"oldRange":[[11,84],[11,84]],"newRange":[[11,84],[11,85]],"oldText":"","newText":"2"}},{"type":"change","content":{"oldRange":[[11,85],[11,85]],"newRange":[[11,85],[11,86]],"oldText":"","newText":"."}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[11,86],[11,86]],"properties":{"type":"selection","goalScreenRange":null,"clip":"forward","preserveFolds":true},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[11,86],[11,86]],"properties":{"type":"selection","goalScreenRange":null,"clip":"forward","preserveFolds":true},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[11,86],[11,86]],"newRange":[[11,86],[11,87]],"oldText":"","newText":"0"}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[11,87],[11,87]],"properties":{"type":"selection","goalScreenRange":null,"clip":"forward","preserveFolds":true},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[11,87],[11,87]],"properties":{"type":"selection","goalScreenRange":null,"clip":"forward","preserveFolds":true},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[0,0],[0,0]],"newRange":[[0,0],[253,13]],"oldText":"","newText":"#  Program to test the Supplier database for changes via webservice calls\n#    This program uses the output report from SupplierDataDelta.rb\n#\n#  Created 12/31/2013 by Adam Stetser\n# Update 05/31/2015 - Todd Jones - Changed the way the script retries when the webservice is unstable.\n# Modified 8/4/2015 Brent Asher - changed to only write to output file on failures\n#\t8/11/2015 Brent Asher, Moved menu and call to web services to helper file, added indicators for program name\n#\t\tand environment on screen\n\nrequire 'curb'\nrequire 'nokogiri'\nrequire 'win32console'\nrequire_relative 'SUPRubyHelpers'\n\n@local_filename\n \ndef filename(d)\n   local_filename1 = \"../output/OPS-1267-SupplierWebDB\" #need to have file name change by day\n   filedate = d.strftime(\"%m%d%Y\")\n   local_filename2 = '.txt'\n   @local_filename = local_filename1+filedate+local_filename2\nend\n\nt=Time.now\nfilename(t)\nenv=String.new\ndbDba_name = String.new\nadded_count = 0\ndeleted_count = 0\nchanged_count = 0\ntotal_count = 0\npassed_count = 0\nfailed_count = 0\n\n# puts \"Monitoring in process\"\n# puts \"Supplier DB Webservice test\"\nTitle=\"OPS-1267 Supplier Web DB Checking\"\nurl=getenv(Title)\nenv=url+\"/supplierservices/Provider.svc/GetProvidersByIDsXML\"\n\ndelta_file = Dir.glob(\"../output/Supplier_Ruby_DeltaAuto*\") \nfile_location = delta_file[-1].gsub(\"/\", \"\\\\\")\n\n#Checks the DeltaAuto file for the \"no change\" tag to abort the script.\ntext=File.open(file_location).read\nif text == \"no change\" \n\tputs \"\\n!!Warning!!\\n\\nThe were no detected changes within the delta file.\\nPlease ensure that the correct current and prior input files were used.\\nConfirm with the technical team that the files should have the same content.\"\n\tFile.open(@local_filename, 'w') { |f| \n\t\tf.write(\"There were no changes detected within #{file_location}\\n\")\n\t\t\tf.write(\"The likely cause is the current and prior pecos files are identical.\\nPlease confirm with the technical team that this is expected.\")}\n\tabort \"Ending script\"\nend\nputs \"Using #{file_location} as the input delta file\\n\\n\"\nputs \"Using #{url} as the environment \\n\\n\"\n\n# puts \"Enter the number for the environment you are testing\"\n# puts \"1 medicare-prod-predeploy.cgifederal.com\"\n# puts \"2 QA.medicare.gov\"\n# puts \"3 Staging.medicare.gov\"\n# puts \"4 www.medicare.gov\"\n# valid = false\n# until valid\n# environment = gets\n# environment.strip!\n\n# case environment \n# when \"1\"\n\t# env = \"medicare-prod-predeploy.cgifederal.com/supplierservices/Provider.svc/GetProvidersByIDsXML\"\n\t# valid = true\n# when \"2\"\n   # env = \"qa.medicare.gov/supplierservices/Provider.svc/GetProvidersByIDsXML\"\n   # valid = true\n# when \"3\"\n   # env = \"staging.medicare.gov/supplierservices/Provider.svc/GetProvidersByIDsXML\"\n   # valid = true\n# when \"4\"\n   # env = \"www.medicare.gov/supplierservices/Provider.svc/GetProvidersByIDsXML\"\n   # valid = true\n# else\n   # puts \"Invalid input\"\n# end\n# end\n\noutputFile = File.open(@local_filename, 'w') \noutputFile.write(\n\"Supplier DB Validation\"+\"\\n\"+\nt.strftime(\"%m/%d/%Y %H:%M\")+\"\\n\"+\nurl+\"\\n\\n\"+\n\"Result  Change  ID        Differences\"+\"\\n\")\n\n#read SupplierDataDelta file by record\nFile.foreach(file_location) {|deltaRecord| \n\n\n##parse record\n   action = deltaRecord[0..9].strip\n   deltaID = deltaRecord[11..20].strip\n   deltaName = deltaRecord[30..99].strip\n   deltaDba_name = deltaRecord[100..169].strip\n   deltaAdr1 = deltaRecord[170..224].strip\n   deltaAdr2 = deltaRecord[225..279].strip\n   deltaCity = deltaRecord[280..309].strip\n   deltaState = deltaRecord[310..311].strip\n   deltaZip = deltaRecord[312..316].strip\n   deltaPhone = deltaRecord[327..336].strip.insert(6,'-').insert(3,'-')\n   \n   deltaRecord = [deltaID, deltaName, deltaDba_name, deltaAdr1, deltaAdr2, deltaCity, deltaState, deltaZip, deltaPhone]\n\n\n#Make the webservice call and if it fails, wait 15 secs and try one more time\n\n#httpstring=\"https://#{env}/#{deltaID}/#{deltaCBSA}/#{deltaCTGY}\"\nhttpstring=\"https://#{env}/#{deltaID}\"\n\n\t# begin  \n\t\t# response = Curl::Easy.new(httpstring) \n\t\t# response.ssl_verify_peer = false\n\t\t# response.perform do |curl| \n\t\t# curl.headers[\"cookie\"] = \"ASPSessionKey=\"\n\t\t# end\n\t# rescue\n\t\t# tries ||= 5\n        # puts \"There was an issue with the connection, waiting 30 seconds and trying again\"\n        # sleep 30\n\t\t# if tries > 0\n\t\t\t# retry\n\t\t# else\n\t\t\t# abort(\"Webservice connection is unstable. aborting test. Please try again later.\\a\\a\")\n\t\t# end\n\t# end\n\tresponse=getWebResponse(httpstring)\n   html_doc = Nokogiri::HTML(response.body_str)\n\n    \n   dbID = html_doc.css('id').text\n   dbName = html_doc.css('name').text\n\n   html_doc.css('supl keyvalueofstringstring key').each do |node1|\n      if node1.text=='dba_name'\n            dbDba_name = node1.next.text #assuming that the value is the next node, returns the dba_name\n      end\n   end\n\n   dbDba_name\n   dbAdr1 = html_doc.css('adr1').text\n   dbAdr2 = html_doc.css('adr2').text\n   dbCity = html_doc.css('city').text\n   dbState = html_doc.css('state').text\n   dbZip = html_doc.css('zip').text\n   dbPhone = html_doc.css('phone').text.gsub(/[()-]/,\"\").gsub(/\\s/,\"\")\n   if !dbPhone.empty?\n      dbPhone = dbPhone.insert(6,'-').insert(3,'-')\n   end\n   \n   dbRecord = [dbID, dbName, dbDba_name, dbAdr1, dbAdr2, dbCity, dbState, dbZip, dbPhone]\n   \n   \n# Generate Testing Results Report\n   \n   case action \n   when \"+ Added +\"\n      added_count = added_count +1\n      missing = deltaRecord - dbRecord\n\n      missing.compact!\n      if missing.empty?\n         print \"PASSED + Added + \"+deltaID +\"\\n\"\n\n         #outputFile.write(\"PASSED +Added+ \"+deltaID +\"\\n\") \n         passed_count = passed_count + 1\n      else\n         print \"FAILED + Added + #{deltaID} \"\n         outputFile.write(\"FAILED +Added+ #{deltaID} \")\n         missing.each do |item|\n            print item+\" \"\n            outputFile.write(item + \" \")\n         end\n         print \"\\n\"\n         outputFile.write(\"\\n\") \n         failed_count = failed_count+1\n      end\n   when \"-Deleted-\"\n      dbRecord.reject! {|c| c.empty?}  #remove blank entries\n      deleted_count = deleted_count +1\n      if dbRecord.empty?\n         print \"PASSED -Deleted- \"+deltaID +\"\\n\"\n         #outputFile.write(\"PASSED -Deleted- \"+deltaID +\"\\n\")\n         passed_count = passed_count + 1\n      else\n         print \"FAILED -Deleted- \"+\" \"\n         outputFile.write(\"FAILED -Deleted- \")\n         dbRecord.each do |item|\n            print item+\" \"\n            outputFile.write(item + \" \")\n\t\tend\n         print \"\\n\"\n         outputFile.write(\"\\n\")\n         failed_count = failed_count+1\n      end\n      \n   when \"New Data\"\n      missing = deltaRecord - dbRecord\n      changed_count = changed_count + 1\n      missing.compact!\n      if missing.empty?\n         print \"PASSED\"+\" New Data \"+deltaID +\"\\n\"\n         #outputFile.write(\"PASSED New Data \" +deltaID+\"\\n\")\n         passed_count = passed_count + 1\n      else\n         print \"FAILED New Data \"+deltaID +\" \"\n         outputFile.write(\"FAILED New Data \"+deltaID +\" \")\n         missing.each do |item|\n            print item+\" \"\n            outputFile.write(item +\" \")\n         end\n         print \"\\n\"\n         outputFile.write(\"\\n\")\n         failed_count = failed_count+1\n      end\n      \n      \n   else\n      puts \"Invalid input\"\n      \n   end\n   \n# Cleanup and End SupplierDataDelta read loop with brace below\ndbDba_name = \"\"\n}\n\ntotal_count = added_count + deleted_count + changed_count\nt = Time.now\noutputFile.write(\n\"\\n #{Title}\"+\"\\n\"+t.strftime(\"%m/%d/%Y %H:%M\")+\"\\n #{env}+\\n\"+\n\"Number Added = \"+added_count.to_s+\"\\n\"+\n\"Number Deleted = \"+deleted_count.to_s+\"\\n\"+\n\"Number Changed = \"+changed_count.to_s+\"\\n\"+\n\"Total = \"+total_count.to_s+\"\\n\\n\"+  \n\"PASSSED = \"+passed_count.to_s+\"\\n\"+ \n\"FAILED = \"+failed_count.to_s+\"\\n\\n\")\n\nputs \"\\nUsing #{file_location} as the input delta file\\n\\n\"\nputs \"Using #{url} as the environment \\n\\n\"\n\nputs \"#{Title}\"+\"\\n\"+t.strftime(\"%m/%d/%Y %H:%M\")+\"\\n #{env}+\\n\"\nputs \"Number Added = #{added_count.to_s}\\n\"\nputs \"Number Deleted = #{deleted_count.to_s}\\n\"\nputs \"Number Changed = #{changed_count.to_s}\\n\"\nputs \"Total = #{total_count.to_s}\\n\\n\"\nputs \"PASSSED = #{passed_count.to_s}\\n\"\nputs \"FAILED = #{failed_count.to_s}\\n\\n\"\n\noutputFile.close\nputs \"Done\\a\""}},{"type":"change","content":{"oldRange":[[253,13],[507,0]],"newRange":[[253,13],[253,13]],"oldText":"#  Program to test the Supplier database for changes via webservice calls\r\n#    This program uses the output report from SupplierDataDelta.rb\r\n#\r\n#  Created 12/31/2013 by Adam Stetser\r\n# Update 05/31/2015 - Todd Jones - Changed the way the script retries when the webservice is unstable.\r\n# Modified 8/4/2015 Brent Asher - changed to only write to output file on failures\r\n#\t8/11/2015 Brent Asher, Moved menu and call to web services to helper file, added indicators for program name\r\n#\t\tand environment on screen\r\n\r\nrequire 'curb'\r\nrequire 'nokogiri'\r\n#require 'win32console' # Uncomment this line if ruby -v returns version lower than 2.0\r\nrequire_relative 'SUPRubyHelpers'\r\n\r\n@local_filename\r\n\r\ndef filename(d)\r\n   local_filename1 = \"../output/OPS-1267-SupplierWebDB\" #need to have file name change by day\r\n   filedate = d.strftime(\"%m%d%Y\")\r\n   local_filename2 = '.txt'\r\n   @local_filename = local_filename1+filedate+local_filename2\r\nend\r\n\r\nt=Time.now\r\nfilename(t)\r\nenv=String.new\r\ndbDba_name = String.new\r\nadded_count = 0\r\ndeleted_count = 0\r\nchanged_count = 0\r\ntotal_count = 0\r\npassed_count = 0\r\nfailed_count = 0\r\n\r\n# puts \"Monitoring in process\"\r\n# puts \"Supplier DB Webservice test\"\r\nTitle=\"OPS-1267 Supplier Web DB Checking\"\r\nurl=getenv(Title)\r\nenv=url+\"/supplierservices/Provider.svc/GetProvidersByIDsXML\"\r\n\r\ndelta_file = Dir.glob(\"../output/Supplier_Ruby_DeltaAuto*\")\r\nfile_location = delta_file[-1].gsub(\"/\", \"\\\\\")\r\n\r\n#Checks the DeltaAuto file for the \"no change\" tag to abort the script.\r\ntext=File.open(file_location).read\r\nif text == \"no change\"\r\n\tputs \"\\n!!Warning!!\\n\\nThe were no detected changes within the delta file.\\nPlease ensure that the correct current and prior input files were used.\\nConfirm with the technical team that the files should have the same content.\"\r\n\tFile.open(@local_filename, 'w') { |f|\r\n\t\tf.write(\"There were no changes detected within #{file_location}\\n\")\r\n\t\t\tf.write(\"The likely cause is the current and prior pecos files are identical.\\nPlease confirm with the technical team that this is expected.\")}\r\n\tabort \"Ending script\"\r\nend\r\nputs \"Using #{file_location} as the input delta file\\n\\n\"\r\nputs \"Using #{url} as the environment \\n\\n\"\r\n\r\n# puts \"Enter the number for the environment you are testing\"\r\n# puts \"1 medicare-prod-predeploy.cgifederal.com\"\r\n# puts \"2 QA.medicare.gov\"\r\n# puts \"3 Staging.medicare.gov\"\r\n# puts \"4 www.medicare.gov\"\r\n# valid = false\r\n# until valid\r\n# environment = gets\r\n# environment.strip!\r\n\r\n# case environment\r\n# when \"1\"\r\n\t# env = \"medicare-prod-predeploy.cgifederal.com/supplierservices/Provider.svc/GetProvidersByIDsXML\"\r\n\t# valid = true\r\n# when \"2\"\r\n   # env = \"qa.medicare.gov/supplierservices/Provider.svc/GetProvidersByIDsXML\"\r\n   # valid = true\r\n# when \"3\"\r\n   # env = \"staging.medicare.gov/supplierservices/Provider.svc/GetProvidersByIDsXML\"\r\n   # valid = true\r\n# when \"4\"\r\n   # env = \"www.medicare.gov/supplierservices/Provider.svc/GetProvidersByIDsXML\"\r\n   # valid = true\r\n# else\r\n   # puts \"Invalid input\"\r\n# end\r\n# end\r\n\r\noutputFile = File.open(@local_filename, 'w')\r\noutputFile.write(\r\n\"Supplier DB Validation\"+\"\\n\"+\r\nt.strftime(\"%m/%d/%Y %H:%M\")+\"\\n\"+\r\nurl+\"\\n\\n\"+\r\n\"Result  Change  ID        Differences\"+\"\\n\")\r\n\r\n#read SupplierDataDelta file by record\r\nFile.foreach(file_location) {|deltaRecord|\r\n\r\n\r\n##parse record\r\n   action = deltaRecord[0..9].strip\r\n   deltaID = deltaRecord[11..20].strip\r\n   deltaName = deltaRecord[30..99].strip\r\n   deltaDba_name = deltaRecord[100..169].strip\r\n   deltaAdr1 = deltaRecord[170..224].strip\r\n   deltaAdr2 = deltaRecord[225..279].strip\r\n   deltaCity = deltaRecord[280..309].strip\r\n   deltaState = deltaRecord[310..311].strip\r\n   deltaZip = deltaRecord[312..316].strip\r\n   deltaPhone = deltaRecord[327..336].strip.insert(6,'-').insert(3,'-')\r\n\r\n   deltaRecord = [deltaID, deltaName, deltaDba_name, deltaAdr1, deltaAdr2, deltaCity, deltaState, deltaZip, deltaPhone]\r\n\r\n\r\n#Make the webservice call and if it fails, wait 15 secs and try one more time\r\n\r\n#httpstring=\"https://#{env}/#{deltaID}/#{deltaCBSA}/#{deltaCTGY}\"\r\nhttpstring=\"https://#{env}/#{deltaID}\"\r\n\r\n\t# begin\r\n\t\t# response = Curl::Easy.new(httpstring)\r\n\t\t# response.ssl_verify_peer = false\r\n\t\t# response.perform do |curl|\r\n\t\t# curl.headers[\"cookie\"] = \"ASPSessionKey=\"\r\n\t\t# end\r\n\t# rescue\r\n\t\t# tries ||= 5\r\n        # puts \"There was an issue with the connection, waiting 30 seconds and trying again\"\r\n        # sleep 30\r\n\t\t# if tries > 0\r\n\t\t\t# retry\r\n\t\t# else\r\n\t\t\t# abort(\"Webservice connection is unstable. aborting test. Please try again later.\\a\\a\")\r\n\t\t# end\r\n\t# end\r\n\tresponse=getWebResponse(httpstring)\r\n   html_doc = Nokogiri::HTML(response.body_str)\r\n\r\n\r\n   dbID = html_doc.css('id').text\r\n   dbName = html_doc.css('name').text\r\n\r\n   html_doc.css('supl keyvalueofstringstring key').each do |node1|\r\n      if node1.text=='dba_name'\r\n            dbDba_name = node1.next.text #assuming that the value is the next node, returns the dba_name\r\n      end\r\n   end\r\n\r\n   dbDba_name\r\n   dbAdr1 = html_doc.css('adr1').text\r\n   dbAdr2 = html_doc.css('adr2').text\r\n   dbCity = html_doc.css('city').text\r\n   dbState = html_doc.css('state').text\r\n   dbZip = html_doc.css('zip').text\r\n   dbPhone = html_doc.css('phone').text.gsub(/[()-]/,\"\").gsub(/\\s/,\"\")\r\n   if !dbPhone.empty?\r\n      dbPhone = dbPhone.insert(6,'-').insert(3,'-')\r\n   end\r\n\r\n   dbRecord = [dbID, dbName, dbDba_name, dbAdr1, dbAdr2, dbCity, dbState, dbZip, dbPhone]\r\n\r\n\r\n# Generate Testing Results Report\r\n\r\n   case action\r\n   when \"+ Added +\"\r\n      added_count = added_count +1\r\n      missing = deltaRecord - dbRecord\r\n\r\n      missing.compact!\r\n      if missing.empty?\r\n         print \"PASSED + Added + \"+deltaID +\"\\n\"\r\n\r\n         #outputFile.write(\"PASSED +Added+ \"+deltaID +\"\\n\")\r\n         passed_count = passed_count + 1\r\n      else\r\n         print \"FAILED + Added + #{deltaID} \"\r\n         outputFile.write(\"FAILED +Added+ #{deltaID} \")\r\n         missing.each do |item|\r\n            print item+\" \"\r\n            outputFile.write(item + \" \")\r\n         end\r\n         print \"\\n\"\r\n         outputFile.write(\"\\n\")\r\n         failed_count = failed_count+1\r\n      end\r\n   when \"-Deleted-\"\r\n      dbRecord.reject! {|c| c.empty?}  #remove blank entries\r\n      deleted_count = deleted_count +1\r\n      if dbRecord.empty?\r\n         print \"PASSED -Deleted- \"+deltaID +\"\\n\"\r\n         #outputFile.write(\"PASSED -Deleted- \"+deltaID +\"\\n\")\r\n         passed_count = passed_count + 1\r\n      else\r\n         print \"FAILED -Deleted- \"+\" \"\r\n         outputFile.write(\"FAILED -Deleted- \")\r\n         dbRecord.each do |item|\r\n            print item+\" \"\r\n            outputFile.write(item + \" \")\r\n\t\tend\r\n         print \"\\n\"\r\n         outputFile.write(\"\\n\")\r\n         failed_count = failed_count+1\r\n      end\r\n\r\n   when \"New Data\"\r\n      missing = deltaRecord - dbRecord\r\n      changed_count = changed_count + 1\r\n      missing.compact!\r\n      if missing.empty?\r\n         print \"PASSED\"+\" New Data \"+deltaID +\"\\n\"\r\n         #outputFile.write(\"PASSED New Data \" +deltaID+\"\\n\")\r\n         passed_count = passed_count + 1\r\n      else\r\n         print \"FAILED New Data \"+deltaID +\" \"\r\n         outputFile.write(\"FAILED New Data \"+deltaID +\" \")\r\n         missing.each do |item|\r\n            print item+\" \"\r\n            outputFile.write(item +\" \")\r\n         end\r\n         print \"\\n\"\r\n         outputFile.write(\"\\n\")\r\n         failed_count = failed_count+1\r\n      end\r\n\r\n\r\n   else\r\n      puts \"Invalid input\"\r\n\r\n   end\r\n\r\n# Cleanup and End SupplierDataDelta read loop with brace below\r\ndbDba_name = \"\"\r\n}\r\n\r\ntotal_count = added_count + deleted_count + changed_count\r\nt = Time.now\r\noutputFile.write(\r\n\"\\n #{Title}\"+\"\\n\"+t.strftime(\"%m/%d/%Y %H:%M\")+\"\\n #{env}+\\n\"+\r\n\"Number Added = \"+added_count.to_s+\"\\n\"+\r\n\"Number Deleted = \"+deleted_count.to_s+\"\\n\"+\r\n\"Number Changed = \"+changed_count.to_s+\"\\n\"+\r\n\"Total = \"+total_count.to_s+\"\\n\\n\"+\r\n\"PASSSED = \"+passed_count.to_s+\"\\n\"+\r\n\"FAILED = \"+failed_count.to_s+\"\\n\\n\")\r\n\r\nputs \"\\nUsing #{file_location} as the input delta file\\n\\n\"\r\nputs \"Using #{url} as the environment \\n\\n\"\r\n\r\nputs \"#{Title}\"+\"\\n\"+t.strftime(\"%m/%d/%Y %H:%M\")+\"\\n #{env}+\\n\"\r\nputs \"Number Added = #{added_count.to_s}\\n\"\r\nputs \"Number Deleted = #{deleted_count.to_s}\\n\"\r\nputs \"Number Changed = #{changed_count.to_s}\\n\"\r\nputs \"Total = #{total_count.to_s}\\n\\n\"\r\nputs \"PASSSED = #{passed_count.to_s}\\n\"\r\nputs \"FAILED = #{failed_count.to_s}\\n\\n\"\r\n\r\noutputFile.close\r\nputs \"Done\\a\"\r\n","newText":""}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[253,13],[253,13]],"properties":{"type":"selection","goalScreenRange":null,"clip":"forward","preserveFolds":true},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[11,22],[11,22]],"properties":{"type":"selection","goalScreenRange":null,"clip":"forward","preserveFolds":true},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[0,0],[253,13]],"newRange":[[0,0],[0,0]],"oldText":"#  Program to test the Supplier database for changes via webservice calls\n#    This program uses the output report from SupplierDataDelta.rb\n#\n#  Created 12/31/2013 by Adam Stetser\n# Update 05/31/2015 - Todd Jones - Changed the way the script retries when the webservice is unstable.\n# Modified 8/4/2015 Brent Asher - changed to only write to output file on failures\n#\t8/11/2015 Brent Asher, Moved menu and call to web services to helper file, added indicators for program name\n#\t\tand environment on screen\n\nrequire 'curb'\nrequire 'nokogiri'\nrequire 'win32console'\nrequire_relative 'SUPRubyHelpers'\n\n@local_filename\n \ndef filename(d)\n   local_filename1 = \"../output/OPS-1267-SupplierWebDB\" #need to have file name change by day\n   filedate = d.strftime(\"%m%d%Y\")\n   local_filename2 = '.txt'\n   @local_filename = local_filename1+filedate+local_filename2\nend\n\nt=Time.now\nfilename(t)\nenv=String.new\ndbDba_name = String.new\nadded_count = 0\ndeleted_count = 0\nchanged_count = 0\ntotal_count = 0\npassed_count = 0\nfailed_count = 0\n\n# puts \"Monitoring in process\"\n# puts \"Supplier DB Webservice test\"\nTitle=\"OPS-1267 Supplier Web DB Checking\"\nurl=getenv(Title)\nenv=url+\"/supplierservices/Provider.svc/GetProvidersByIDsXML\"\n\ndelta_file = Dir.glob(\"../output/Supplier_Ruby_DeltaAuto*\") \nfile_location = delta_file[-1].gsub(\"/\", \"\\\\\")\n\n#Checks the DeltaAuto file for the \"no change\" tag to abort the script.\ntext=File.open(file_location).read\nif text == \"no change\" \n\tputs \"\\n!!Warning!!\\n\\nThe were no detected changes within the delta file.\\nPlease ensure that the correct current and prior input files were used.\\nConfirm with the technical team that the files should have the same content.\"\n\tFile.open(@local_filename, 'w') { |f| \n\t\tf.write(\"There were no changes detected within #{file_location}\\n\")\n\t\t\tf.write(\"The likely cause is the current and prior pecos files are identical.\\nPlease confirm with the technical team that this is expected.\")}\n\tabort \"Ending script\"\nend\nputs \"Using #{file_location} as the input delta file\\n\\n\"\nputs \"Using #{url} as the environment \\n\\n\"\n\n# puts \"Enter the number for the environment you are testing\"\n# puts \"1 medicare-prod-predeploy.cgifederal.com\"\n# puts \"2 QA.medicare.gov\"\n# puts \"3 Staging.medicare.gov\"\n# puts \"4 www.medicare.gov\"\n# valid = false\n# until valid\n# environment = gets\n# environment.strip!\n\n# case environment \n# when \"1\"\n\t# env = \"medicare-prod-predeploy.cgifederal.com/supplierservices/Provider.svc/GetProvidersByIDsXML\"\n\t# valid = true\n# when \"2\"\n   # env = \"qa.medicare.gov/supplierservices/Provider.svc/GetProvidersByIDsXML\"\n   # valid = true\n# when \"3\"\n   # env = \"staging.medicare.gov/supplierservices/Provider.svc/GetProvidersByIDsXML\"\n   # valid = true\n# when \"4\"\n   # env = \"www.medicare.gov/supplierservices/Provider.svc/GetProvidersByIDsXML\"\n   # valid = true\n# else\n   # puts \"Invalid input\"\n# end\n# end\n\noutputFile = File.open(@local_filename, 'w') \noutputFile.write(\n\"Supplier DB Validation\"+\"\\n\"+\nt.strftime(\"%m/%d/%Y %H:%M\")+\"\\n\"+\nurl+\"\\n\\n\"+\n\"Result  Change  ID        Differences\"+\"\\n\")\n\n#read SupplierDataDelta file by record\nFile.foreach(file_location) {|deltaRecord| \n\n\n##parse record\n   action = deltaRecord[0..9].strip\n   deltaID = deltaRecord[11..20].strip\n   deltaName = deltaRecord[30..99].strip\n   deltaDba_name = deltaRecord[100..169].strip\n   deltaAdr1 = deltaRecord[170..224].strip\n   deltaAdr2 = deltaRecord[225..279].strip\n   deltaCity = deltaRecord[280..309].strip\n   deltaState = deltaRecord[310..311].strip\n   deltaZip = deltaRecord[312..316].strip\n   deltaPhone = deltaRecord[327..336].strip.insert(6,'-').insert(3,'-')\n   \n   deltaRecord = [deltaID, deltaName, deltaDba_name, deltaAdr1, deltaAdr2, deltaCity, deltaState, deltaZip, deltaPhone]\n\n\n#Make the webservice call and if it fails, wait 15 secs and try one more time\n\n#httpstring=\"https://#{env}/#{deltaID}/#{deltaCBSA}/#{deltaCTGY}\"\nhttpstring=\"https://#{env}/#{deltaID}\"\n\n\t# begin  \n\t\t# response = Curl::Easy.new(httpstring) \n\t\t# response.ssl_verify_peer = false\n\t\t# response.perform do |curl| \n\t\t# curl.headers[\"cookie\"] = \"ASPSessionKey=\"\n\t\t# end\n\t# rescue\n\t\t# tries ||= 5\n        # puts \"There was an issue with the connection, waiting 30 seconds and trying again\"\n        # sleep 30\n\t\t# if tries > 0\n\t\t\t# retry\n\t\t# else\n\t\t\t# abort(\"Webservice connection is unstable. aborting test. Please try again later.\\a\\a\")\n\t\t# end\n\t# end\n\tresponse=getWebResponse(httpstring)\n   html_doc = Nokogiri::HTML(response.body_str)\n\n    \n   dbID = html_doc.css('id').text\n   dbName = html_doc.css('name').text\n\n   html_doc.css('supl keyvalueofstringstring key').each do |node1|\n      if node1.text=='dba_name'\n            dbDba_name = node1.next.text #assuming that the value is the next node, returns the dba_name\n      end\n   end\n\n   dbDba_name\n   dbAdr1 = html_doc.css('adr1').text\n   dbAdr2 = html_doc.css('adr2').text\n   dbCity = html_doc.css('city').text\n   dbState = html_doc.css('state').text\n   dbZip = html_doc.css('zip').text\n   dbPhone = html_doc.css('phone').text.gsub(/[()-]/,\"\").gsub(/\\s/,\"\")\n   if !dbPhone.empty?\n      dbPhone = dbPhone.insert(6,'-').insert(3,'-')\n   end\n   \n   dbRecord = [dbID, dbName, dbDba_name, dbAdr1, dbAdr2, dbCity, dbState, dbZip, dbPhone]\n   \n   \n# Generate Testing Results Report\n   \n   case action \n   when \"+ Added +\"\n      added_count = added_count +1\n      missing = deltaRecord - dbRecord\n\n      missing.compact!\n      if missing.empty?\n         print \"PASSED + Added + \"+deltaID +\"\\n\"\n\n         #outputFile.write(\"PASSED +Added+ \"+deltaID +\"\\n\") \n         passed_count = passed_count + 1\n      else\n         print \"FAILED + Added + #{deltaID} \"\n         outputFile.write(\"FAILED +Added+ #{deltaID} \")\n         missing.each do |item|\n            print item+\" \"\n            outputFile.write(item + \" \")\n         end\n         print \"\\n\"\n         outputFile.write(\"\\n\") \n         failed_count = failed_count+1\n      end\n   when \"-Deleted-\"\n      dbRecord.reject! {|c| c.empty?}  #remove blank entries\n      deleted_count = deleted_count +1\n      if dbRecord.empty?\n         print \"PASSED -Deleted- \"+deltaID +\"\\n\"\n         #outputFile.write(\"PASSED -Deleted- \"+deltaID +\"\\n\")\n         passed_count = passed_count + 1\n      else\n         print \"FAILED -Deleted- \"+\" \"\n         outputFile.write(\"FAILED -Deleted- \")\n         dbRecord.each do |item|\n            print item+\" \"\n            outputFile.write(item + \" \")\n\t\tend\n         print \"\\n\"\n         outputFile.write(\"\\n\")\n         failed_count = failed_count+1\n      end\n      \n   when \"New Data\"\n      missing = deltaRecord - dbRecord\n      changed_count = changed_count + 1\n      missing.compact!\n      if missing.empty?\n         print \"PASSED\"+\" New Data \"+deltaID +\"\\n\"\n         #outputFile.write(\"PASSED New Data \" +deltaID+\"\\n\")\n         passed_count = passed_count + 1\n      else\n         print \"FAILED New Data \"+deltaID +\" \"\n         outputFile.write(\"FAILED New Data \"+deltaID +\" \")\n         missing.each do |item|\n            print item+\" \"\n            outputFile.write(item +\" \")\n         end\n         print \"\\n\"\n         outputFile.write(\"\\n\")\n         failed_count = failed_count+1\n      end\n      \n      \n   else\n      puts \"Invalid input\"\n      \n   end\n   \n# Cleanup and End SupplierDataDelta read loop with brace below\ndbDba_name = \"\"\n}\n\ntotal_count = added_count + deleted_count + changed_count\nt = Time.now\noutputFile.write(\n\"\\n #{Title}\"+\"\\n\"+t.strftime(\"%m/%d/%Y %H:%M\")+\"\\n #{env}+\\n\"+\n\"Number Added = \"+added_count.to_s+\"\\n\"+\n\"Number Deleted = \"+deleted_count.to_s+\"\\n\"+\n\"Number Changed = \"+changed_count.to_s+\"\\n\"+\n\"Total = \"+total_count.to_s+\"\\n\\n\"+  \n\"PASSSED = \"+passed_count.to_s+\"\\n\"+ \n\"FAILED = \"+failed_count.to_s+\"\\n\\n\")\n\nputs \"\\nUsing #{file_location} as the input delta file\\n\\n\"\nputs \"Using #{url} as the environment \\n\\n\"\n\nputs \"#{Title}\"+\"\\n\"+t.strftime(\"%m/%d/%Y %H:%M\")+\"\\n #{env}+\\n\"\nputs \"Number Added = #{added_count.to_s}\\n\"\nputs \"Number Deleted = #{deleted_count.to_s}\\n\"\nputs \"Number Changed = #{changed_count.to_s}\\n\"\nputs \"Total = #{total_count.to_s}\\n\\n\"\nputs \"PASSSED = #{passed_count.to_s}\\n\"\nputs \"FAILED = #{failed_count.to_s}\\n\\n\"\n\noutputFile.close\nputs \"Done\\a\"","newText":""}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[0,0],[0,0]],"properties":{"type":"selection","goalScreenRange":null,"clip":"forward","preserveFolds":true},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[0,0],[0,0]],"properties":{"type":"selection","goalScreenRange":null,"clip":"forward","preserveFolds":true},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[0,0],[0,0]],"newRange":[[0,0],[254,0]],"oldText":"","newText":"#  Program to test the Supplier database for changes via webservice calls\r\n#    This program uses the output report from SupplierDataDelta.rb\r\n#\r\n#  Created 12/31/2013 by Adam Stetser\r\n# Update 05/31/2015 - Todd Jones - Changed the way the script retries when the webservice is unstable.\r\n# Modified 8/4/2015 Brent Asher - changed to only write to output file on failures\r\n#\t8/11/2015 Brent Asher, Moved menu and call to web services to helper file, added indicators for program name\r\n#\t\tand environment on screen\r\n\r\nrequire 'curb'\r\nrequire 'nokogiri'\r\n#require 'win32console' # Uncomment this line if ruby -v returns version lower than 2.0\r\nrequire_relative 'SUPRubyHelpers'\r\n\r\n@local_filename\r\n\r\ndef filename(d)\r\n   local_filename1 = \"../output/OPS-1267-SupplierWebDB\" #need to have file name change by day\r\n   filedate = d.strftime(\"%m%d%Y\")\r\n   local_filename2 = '.txt'\r\n   @local_filename = local_filename1+filedate+local_filename2\r\nend\r\n\r\nt=Time.now\r\nfilename(t)\r\nenv=String.new\r\ndbDba_name = String.new\r\nadded_count = 0\r\ndeleted_count = 0\r\nchanged_count = 0\r\ntotal_count = 0\r\npassed_count = 0\r\nfailed_count = 0\r\n\r\n# puts \"Monitoring in process\"\r\n# puts \"Supplier DB Webservice test\"\r\nTitle=\"OPS-1267 Supplier Web DB Checking\"\r\nurl=getenv(Title)\r\nenv=url+\"/supplierservices/Provider.svc/GetProvidersByIDsXML\"\r\n\r\ndelta_file = Dir.glob(\"../output/Supplier_Ruby_DeltaAuto*\")\r\nfile_location = delta_file[-1].gsub(\"/\", \"\\\\\")\r\n\r\n#Checks the DeltaAuto file for the \"no change\" tag to abort the script.\r\ntext=File.open(file_location).read\r\nif text == \"no change\"\r\n\tputs \"\\n!!Warning!!\\n\\nThe were no detected changes within the delta file.\\nPlease ensure that the correct current and prior input files were used.\\nConfirm with the technical team that the files should have the same content.\"\r\n\tFile.open(@local_filename, 'w') { |f|\r\n\t\tf.write(\"There were no changes detected within #{file_location}\\n\")\r\n\t\t\tf.write(\"The likely cause is the current and prior pecos files are identical.\\nPlease confirm with the technical team that this is expected.\")}\r\n\tabort \"Ending script\"\r\nend\r\nputs \"Using #{file_location} as the input delta file\\n\\n\"\r\nputs \"Using #{url} as the environment \\n\\n\"\r\n\r\n# puts \"Enter the number for the environment you are testing\"\r\n# puts \"1 medicare-prod-predeploy.cgifederal.com\"\r\n# puts \"2 QA.medicare.gov\"\r\n# puts \"3 Staging.medicare.gov\"\r\n# puts \"4 www.medicare.gov\"\r\n# valid = false\r\n# until valid\r\n# environment = gets\r\n# environment.strip!\r\n\r\n# case environment\r\n# when \"1\"\r\n\t# env = \"medicare-prod-predeploy.cgifederal.com/supplierservices/Provider.svc/GetProvidersByIDsXML\"\r\n\t# valid = true\r\n# when \"2\"\r\n   # env = \"qa.medicare.gov/supplierservices/Provider.svc/GetProvidersByIDsXML\"\r\n   # valid = true\r\n# when \"3\"\r\n   # env = \"staging.medicare.gov/supplierservices/Provider.svc/GetProvidersByIDsXML\"\r\n   # valid = true\r\n# when \"4\"\r\n   # env = \"www.medicare.gov/supplierservices/Provider.svc/GetProvidersByIDsXML\"\r\n   # valid = true\r\n# else\r\n   # puts \"Invalid input\"\r\n# end\r\n# end\r\n\r\noutputFile = File.open(@local_filename, 'w')\r\noutputFile.write(\r\n\"Supplier DB Validation\"+\"\\n\"+\r\nt.strftime(\"%m/%d/%Y %H:%M\")+\"\\n\"+\r\nurl+\"\\n\\n\"+\r\n\"Result  Change  ID        Differences\"+\"\\n\")\r\n\r\n#read SupplierDataDelta file by record\r\nFile.foreach(file_location) {|deltaRecord|\r\n\r\n\r\n##parse record\r\n   action = deltaRecord[0..9].strip\r\n   deltaID = deltaRecord[11..20].strip\r\n   deltaName = deltaRecord[30..99].strip\r\n   deltaDba_name = deltaRecord[100..169].strip\r\n   deltaAdr1 = deltaRecord[170..224].strip\r\n   deltaAdr2 = deltaRecord[225..279].strip\r\n   deltaCity = deltaRecord[280..309].strip\r\n   deltaState = deltaRecord[310..311].strip\r\n   deltaZip = deltaRecord[312..316].strip\r\n   deltaPhone = deltaRecord[327..336].strip.insert(6,'-').insert(3,'-')\r\n\r\n   deltaRecord = [deltaID, deltaName, deltaDba_name, deltaAdr1, deltaAdr2, deltaCity, deltaState, deltaZip, deltaPhone]\r\n\r\n\r\n#Make the webservice call and if it fails, wait 15 secs and try one more time\r\n\r\n#httpstring=\"https://#{env}/#{deltaID}/#{deltaCBSA}/#{deltaCTGY}\"\r\nhttpstring=\"https://#{env}/#{deltaID}\"\r\n\r\n\t# begin\r\n\t\t# response = Curl::Easy.new(httpstring)\r\n\t\t# response.ssl_verify_peer = false\r\n\t\t# response.perform do |curl|\r\n\t\t# curl.headers[\"cookie\"] = \"ASPSessionKey=\"\r\n\t\t# end\r\n\t# rescue\r\n\t\t# tries ||= 5\r\n        # puts \"There was an issue with the connection, waiting 30 seconds and trying again\"\r\n        # sleep 30\r\n\t\t# if tries > 0\r\n\t\t\t# retry\r\n\t\t# else\r\n\t\t\t# abort(\"Webservice connection is unstable. aborting test. Please try again later.\\a\\a\")\r\n\t\t# end\r\n\t# end\r\n\tresponse=getWebResponse(httpstring)\r\n   html_doc = Nokogiri::HTML(response.body_str)\r\n\r\n\r\n   dbID = html_doc.css('id').text\r\n   dbName = html_doc.css('name').text\r\n\r\n   html_doc.css('supl keyvalueofstringstring key').each do |node1|\r\n      if node1.text=='dba_name'\r\n            dbDba_name = node1.next.text #assuming that the value is the next node, returns the dba_name\r\n      end\r\n   end\r\n\r\n   dbDba_name\r\n   dbAdr1 = html_doc.css('adr1').text\r\n   dbAdr2 = html_doc.css('adr2').text\r\n   dbCity = html_doc.css('city').text\r\n   dbState = html_doc.css('state').text\r\n   dbZip = html_doc.css('zip').text\r\n   dbPhone = html_doc.css('phone').text.gsub(/[()-]/,\"\").gsub(/\\s/,\"\")\r\n   if !dbPhone.empty?\r\n      dbPhone = dbPhone.insert(6,'-').insert(3,'-')\r\n   end\r\n\r\n   dbRecord = [dbID, dbName, dbDba_name, dbAdr1, dbAdr2, dbCity, dbState, dbZip, dbPhone]\r\n\r\n\r\n# Generate Testing Results Report\r\n\r\n   case action\r\n   when \"+ Added +\"\r\n      added_count = added_count +1\r\n      missing = deltaRecord - dbRecord\r\n\r\n      missing.compact!\r\n      if missing.empty?\r\n         print \"PASSED + Added + \"+deltaID +\"\\n\"\r\n\r\n         #outputFile.write(\"PASSED +Added+ \"+deltaID +\"\\n\")\r\n         passed_count = passed_count + 1\r\n      else\r\n         print \"FAILED + Added + #{deltaID} \"\r\n         outputFile.write(\"FAILED +Added+ #{deltaID} \")\r\n         missing.each do |item|\r\n            print item+\" \"\r\n            outputFile.write(item + \" \")\r\n         end\r\n         print \"\\n\"\r\n         outputFile.write(\"\\n\")\r\n         failed_count = failed_count+1\r\n      end\r\n   when \"-Deleted-\"\r\n      dbRecord.reject! {|c| c.empty?}  #remove blank entries\r\n      deleted_count = deleted_count +1\r\n      if dbRecord.empty?\r\n         print \"PASSED -Deleted- \"+deltaID +\"\\n\"\r\n         #outputFile.write(\"PASSED -Deleted- \"+deltaID +\"\\n\")\r\n         passed_count = passed_count + 1\r\n      else\r\n         print \"FAILED -Deleted- \"+\" \"\r\n         outputFile.write(\"FAILED -Deleted- \")\r\n         dbRecord.each do |item|\r\n            print item+\" \"\r\n            outputFile.write(item + \" \")\r\n\t\tend\r\n         print \"\\n\"\r\n         outputFile.write(\"\\n\")\r\n         failed_count = failed_count+1\r\n      end\r\n\r\n   when \"New Data\"\r\n      missing = deltaRecord - dbRecord\r\n      changed_count = changed_count + 1\r\n      missing.compact!\r\n      if missing.empty?\r\n         print \"PASSED\"+\" New Data \"+deltaID +\"\\n\"\r\n         #outputFile.write(\"PASSED New Data \" +deltaID+\"\\n\")\r\n         passed_count = passed_count + 1\r\n      else\r\n         print \"FAILED New Data \"+deltaID +\" \"\r\n         outputFile.write(\"FAILED New Data \"+deltaID +\" \")\r\n         missing.each do |item|\r\n            print item+\" \"\r\n            outputFile.write(item +\" \")\r\n         end\r\n         print \"\\n\"\r\n         outputFile.write(\"\\n\")\r\n         failed_count = failed_count+1\r\n      end\r\n\r\n\r\n   else\r\n      puts \"Invalid input\"\r\n\r\n   end\r\n\r\n# Cleanup and End SupplierDataDelta read loop with brace below\r\ndbDba_name = \"\"\r\n}\r\n\r\ntotal_count = added_count + deleted_count + changed_count\r\nt = Time.now\r\noutputFile.write(\r\n\"\\n #{Title}\"+\"\\n\"+t.strftime(\"%m/%d/%Y %H:%M\")+\"\\n #{env}+\\n\"+\r\n\"Number Added = \"+added_count.to_s+\"\\n\"+\r\n\"Number Deleted = \"+deleted_count.to_s+\"\\n\"+\r\n\"Number Changed = \"+changed_count.to_s+\"\\n\"+\r\n\"Total = \"+total_count.to_s+\"\\n\\n\"+\r\n\"PASSSED = \"+passed_count.to_s+\"\\n\"+\r\n\"FAILED = \"+failed_count.to_s+\"\\n\\n\")\r\n\r\nputs \"\\nUsing #{file_location} as the input delta file\\n\\n\"\r\nputs \"Using #{url} as the environment \\n\\n\"\r\n\r\nputs \"#{Title}\"+\"\\n\"+t.strftime(\"%m/%d/%Y %H:%M\")+\"\\n #{env}+\\n\"\r\nputs \"Number Added = #{added_count.to_s}\\n\"\r\nputs \"Number Deleted = #{deleted_count.to_s}\\n\"\r\nputs \"Number Changed = #{changed_count.to_s}\\n\"\r\nputs \"Total = #{total_count.to_s}\\n\\n\"\r\nputs \"PASSSED = #{passed_count.to_s}\\n\"\r\nputs \"FAILED = #{failed_count.to_s}\\n\\n\"\r\n\r\noutputFile.close\r\nputs \"Done\\a\"\r\n"}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[254,0],[254,0]],"properties":{"type":"selection","goalScreenRange":null,"clip":"forward","preserveFolds":true},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[0,0],[0,0]],"properties":{"type":"selection","goalScreenRange":null,"clip":"forward","preserveFolds":true},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[0,0],[0,0]],"newRange":[[0,0],[253,13]],"oldText":"","newText":"#  Program to test the Supplier database for changes via webservice calls\n#    This program uses the output report from SupplierDataDelta.rb\n#\n#  Created 12/31/2013 by Adam Stetser\n# Update 05/31/2015 - Todd Jones - Changed the way the script retries when the webservice is unstable.\n# Modified 8/4/2015 Brent Asher - changed to only write to output file on failures\n#\t8/11/2015 Brent Asher, Moved menu and call to web services to helper file, added indicators for program name\n#\t\tand environment on screen\n\nrequire 'curb'\nrequire 'nokogiri'\nrequire 'win32console'\nrequire_relative 'SUPRubyHelpers'\n\n@local_filename\n \ndef filename(d)\n   local_filename1 = \"../output/OPS-1267-SupplierWebDB\" #need to have file name change by day\n   filedate = d.strftime(\"%m%d%Y\")\n   local_filename2 = '.txt'\n   @local_filename = local_filename1+filedate+local_filename2\nend\n\nt=Time.now\nfilename(t)\nenv=String.new\ndbDba_name = String.new\nadded_count = 0\ndeleted_count = 0\nchanged_count = 0\ntotal_count = 0\npassed_count = 0\nfailed_count = 0\n\n# puts \"Monitoring in process\"\n# puts \"Supplier DB Webservice test\"\nTitle=\"OPS-1267 Supplier Web DB Checking\"\nurl=getenv(Title)\nenv=url+\"/supplierservices/Provider.svc/GetProvidersByIDsXML\"\n\ndelta_file = Dir.glob(\"../output/Supplier_Ruby_DeltaAuto*\") \nfile_location = delta_file[-1].gsub(\"/\", \"\\\\\")\n\n#Checks the DeltaAuto file for the \"no change\" tag to abort the script.\ntext=File.open(file_location).read\nif text == \"no change\" \n\tputs \"\\n!!Warning!!\\n\\nThe were no detected changes within the delta file.\\nPlease ensure that the correct current and prior input files were used.\\nConfirm with the technical team that the files should have the same content.\"\n\tFile.open(@local_filename, 'w') { |f| \n\t\tf.write(\"There were no changes detected within #{file_location}\\n\")\n\t\t\tf.write(\"The likely cause is the current and prior pecos files are identical.\\nPlease confirm with the technical team that this is expected.\")}\n\tabort \"Ending script\"\nend\nputs \"Using #{file_location} as the input delta file\\n\\n\"\nputs \"Using #{url} as the environment \\n\\n\"\n\n# puts \"Enter the number for the environment you are testing\"\n# puts \"1 medicare-prod-predeploy.cgifederal.com\"\n# puts \"2 QA.medicare.gov\"\n# puts \"3 Staging.medicare.gov\"\n# puts \"4 www.medicare.gov\"\n# valid = false\n# until valid\n# environment = gets\n# environment.strip!\n\n# case environment \n# when \"1\"\n\t# env = \"medicare-prod-predeploy.cgifederal.com/supplierservices/Provider.svc/GetProvidersByIDsXML\"\n\t# valid = true\n# when \"2\"\n   # env = \"qa.medicare.gov/supplierservices/Provider.svc/GetProvidersByIDsXML\"\n   # valid = true\n# when \"3\"\n   # env = \"staging.medicare.gov/supplierservices/Provider.svc/GetProvidersByIDsXML\"\n   # valid = true\n# when \"4\"\n   # env = \"www.medicare.gov/supplierservices/Provider.svc/GetProvidersByIDsXML\"\n   # valid = true\n# else\n   # puts \"Invalid input\"\n# end\n# end\n\noutputFile = File.open(@local_filename, 'w') \noutputFile.write(\n\"Supplier DB Validation\"+\"\\n\"+\nt.strftime(\"%m/%d/%Y %H:%M\")+\"\\n\"+\nurl+\"\\n\\n\"+\n\"Result  Change  ID        Differences\"+\"\\n\")\n\n#read SupplierDataDelta file by record\nFile.foreach(file_location) {|deltaRecord| \n\n\n##parse record\n   action = deltaRecord[0..9].strip\n   deltaID = deltaRecord[11..20].strip\n   deltaName = deltaRecord[30..99].strip\n   deltaDba_name = deltaRecord[100..169].strip\n   deltaAdr1 = deltaRecord[170..224].strip\n   deltaAdr2 = deltaRecord[225..279].strip\n   deltaCity = deltaRecord[280..309].strip\n   deltaState = deltaRecord[310..311].strip\n   deltaZip = deltaRecord[312..316].strip\n   deltaPhone = deltaRecord[327..336].strip.insert(6,'-').insert(3,'-')\n   \n   deltaRecord = [deltaID, deltaName, deltaDba_name, deltaAdr1, deltaAdr2, deltaCity, deltaState, deltaZip, deltaPhone]\n\n\n#Make the webservice call and if it fails, wait 15 secs and try one more time\n\n#httpstring=\"https://#{env}/#{deltaID}/#{deltaCBSA}/#{deltaCTGY}\"\nhttpstring=\"https://#{env}/#{deltaID}\"\n\n\t# begin  \n\t\t# response = Curl::Easy.new(httpstring) \n\t\t# response.ssl_verify_peer = false\n\t\t# response.perform do |curl| \n\t\t# curl.headers[\"cookie\"] = \"ASPSessionKey=\"\n\t\t# end\n\t# rescue\n\t\t# tries ||= 5\n        # puts \"There was an issue with the connection, waiting 30 seconds and trying again\"\n        # sleep 30\n\t\t# if tries > 0\n\t\t\t# retry\n\t\t# else\n\t\t\t# abort(\"Webservice connection is unstable. aborting test. Please try again later.\\a\\a\")\n\t\t# end\n\t# end\n\tresponse=getWebResponse(httpstring)\n   html_doc = Nokogiri::HTML(response.body_str)\n\n    \n   dbID = html_doc.css('id').text\n   dbName = html_doc.css('name').text\n\n   html_doc.css('supl keyvalueofstringstring key').each do |node1|\n      if node1.text=='dba_name'\n            dbDba_name = node1.next.text #assuming that the value is the next node, returns the dba_name\n      end\n   end\n\n   dbDba_name\n   dbAdr1 = html_doc.css('adr1').text\n   dbAdr2 = html_doc.css('adr2').text\n   dbCity = html_doc.css('city').text\n   dbState = html_doc.css('state').text\n   dbZip = html_doc.css('zip').text\n   dbPhone = html_doc.css('phone').text.gsub(/[()-]/,\"\").gsub(/\\s/,\"\")\n   if !dbPhone.empty?\n      dbPhone = dbPhone.insert(6,'-').insert(3,'-')\n   end\n   \n   dbRecord = [dbID, dbName, dbDba_name, dbAdr1, dbAdr2, dbCity, dbState, dbZip, dbPhone]\n   \n   \n# Generate Testing Results Report\n   \n   case action \n   when \"+ Added +\"\n      added_count = added_count +1\n      missing = deltaRecord - dbRecord\n\n      missing.compact!\n      if missing.empty?\n         print \"PASSED + Added + \"+deltaID +\"\\n\"\n\n         #outputFile.write(\"PASSED +Added+ \"+deltaID +\"\\n\") \n         passed_count = passed_count + 1\n      else\n         print \"FAILED + Added + #{deltaID} \"\n         outputFile.write(\"FAILED +Added+ #{deltaID} \")\n         missing.each do |item|\n            print item+\" \"\n            outputFile.write(item + \" \")\n         end\n         print \"\\n\"\n         outputFile.write(\"\\n\") \n         failed_count = failed_count+1\n      end\n   when \"-Deleted-\"\n      dbRecord.reject! {|c| c.empty?}  #remove blank entries\n      deleted_count = deleted_count +1\n      if dbRecord.empty?\n         print \"PASSED -Deleted- \"+deltaID +\"\\n\"\n         #outputFile.write(\"PASSED -Deleted- \"+deltaID +\"\\n\")\n         passed_count = passed_count + 1\n      else\n         print \"FAILED -Deleted- \"+\" \"\n         outputFile.write(\"FAILED -Deleted- \")\n         dbRecord.each do |item|\n            print item+\" \"\n            outputFile.write(item + \" \")\n\t\tend\n         print \"\\n\"\n         outputFile.write(\"\\n\")\n         failed_count = failed_count+1\n      end\n      \n   when \"New Data\"\n      missing = deltaRecord - dbRecord\n      changed_count = changed_count + 1\n      missing.compact!\n      if missing.empty?\n         print \"PASSED\"+\" New Data \"+deltaID +\"\\n\"\n         #outputFile.write(\"PASSED New Data \" +deltaID+\"\\n\")\n         passed_count = passed_count + 1\n      else\n         print \"FAILED New Data \"+deltaID +\" \"\n         outputFile.write(\"FAILED New Data \"+deltaID +\" \")\n         missing.each do |item|\n            print item+\" \"\n            outputFile.write(item +\" \")\n         end\n         print \"\\n\"\n         outputFile.write(\"\\n\")\n         failed_count = failed_count+1\n      end\n      \n      \n   else\n      puts \"Invalid input\"\n      \n   end\n   \n# Cleanup and End SupplierDataDelta read loop with brace below\ndbDba_name = \"\"\n}\n\ntotal_count = added_count + deleted_count + changed_count\nt = Time.now\noutputFile.write(\n\"\\n #{Title}\"+\"\\n\"+t.strftime(\"%m/%d/%Y %H:%M\")+\"\\n #{env}+\\n\"+\n\"Number Added = \"+added_count.to_s+\"\\n\"+\n\"Number Deleted = \"+deleted_count.to_s+\"\\n\"+\n\"Number Changed = \"+changed_count.to_s+\"\\n\"+\n\"Total = \"+total_count.to_s+\"\\n\\n\"+  \n\"PASSSED = \"+passed_count.to_s+\"\\n\"+ \n\"FAILED = \"+failed_count.to_s+\"\\n\\n\")\n\nputs \"\\nUsing #{file_location} as the input delta file\\n\\n\"\nputs \"Using #{url} as the environment \\n\\n\"\n\nputs \"#{Title}\"+\"\\n\"+t.strftime(\"%m/%d/%Y %H:%M\")+\"\\n #{env}+\\n\"\nputs \"Number Added = #{added_count.to_s}\\n\"\nputs \"Number Deleted = #{deleted_count.to_s}\\n\"\nputs \"Number Changed = #{changed_count.to_s}\\n\"\nputs \"Total = #{total_count.to_s}\\n\\n\"\nputs \"PASSSED = #{passed_count.to_s}\\n\"\nputs \"FAILED = #{failed_count.to_s}\\n\\n\"\n\noutputFile.close\nputs \"Done\\a\""}},{"type":"change","content":{"oldRange":[[253,13],[507,0]],"newRange":[[253,13],[253,13]],"oldText":"#  Program to test the Supplier database for changes via webservice calls\r\n#    This program uses the output report from SupplierDataDelta.rb\r\n#\r\n#  Created 12/31/2013 by Adam Stetser\r\n# Update 05/31/2015 - Todd Jones - Changed the way the script retries when the webservice is unstable.\r\n# Modified 8/4/2015 Brent Asher - changed to only write to output file on failures\r\n#\t8/11/2015 Brent Asher, Moved menu and call to web services to helper file, added indicators for program name\r\n#\t\tand environment on screen\r\n\r\nrequire 'curb'\r\nrequire 'nokogiri'\r\n#require 'win32console' # Uncomment this line if ruby -v returns version lower than 2.0\r\nrequire_relative 'SUPRubyHelpers'\r\n\r\n@local_filename\r\n\r\ndef filename(d)\r\n   local_filename1 = \"../output/OPS-1267-SupplierWebDB\" #need to have file name change by day\r\n   filedate = d.strftime(\"%m%d%Y\")\r\n   local_filename2 = '.txt'\r\n   @local_filename = local_filename1+filedate+local_filename2\r\nend\r\n\r\nt=Time.now\r\nfilename(t)\r\nenv=String.new\r\ndbDba_name = String.new\r\nadded_count = 0\r\ndeleted_count = 0\r\nchanged_count = 0\r\ntotal_count = 0\r\npassed_count = 0\r\nfailed_count = 0\r\n\r\n# puts \"Monitoring in process\"\r\n# puts \"Supplier DB Webservice test\"\r\nTitle=\"OPS-1267 Supplier Web DB Checking\"\r\nurl=getenv(Title)\r\nenv=url+\"/supplierservices/Provider.svc/GetProvidersByIDsXML\"\r\n\r\ndelta_file = Dir.glob(\"../output/Supplier_Ruby_DeltaAuto*\")\r\nfile_location = delta_file[-1].gsub(\"/\", \"\\\\\")\r\n\r\n#Checks the DeltaAuto file for the \"no change\" tag to abort the script.\r\ntext=File.open(file_location).read\r\nif text == \"no change\"\r\n\tputs \"\\n!!Warning!!\\n\\nThe were no detected changes within the delta file.\\nPlease ensure that the correct current and prior input files were used.\\nConfirm with the technical team that the files should have the same content.\"\r\n\tFile.open(@local_filename, 'w') { |f|\r\n\t\tf.write(\"There were no changes detected within #{file_location}\\n\")\r\n\t\t\tf.write(\"The likely cause is the current and prior pecos files are identical.\\nPlease confirm with the technical team that this is expected.\")}\r\n\tabort \"Ending script\"\r\nend\r\nputs \"Using #{file_location} as the input delta file\\n\\n\"\r\nputs \"Using #{url} as the environment \\n\\n\"\r\n\r\n# puts \"Enter the number for the environment you are testing\"\r\n# puts \"1 medicare-prod-predeploy.cgifederal.com\"\r\n# puts \"2 QA.medicare.gov\"\r\n# puts \"3 Staging.medicare.gov\"\r\n# puts \"4 www.medicare.gov\"\r\n# valid = false\r\n# until valid\r\n# environment = gets\r\n# environment.strip!\r\n\r\n# case environment\r\n# when \"1\"\r\n\t# env = \"medicare-prod-predeploy.cgifederal.com/supplierservices/Provider.svc/GetProvidersByIDsXML\"\r\n\t# valid = true\r\n# when \"2\"\r\n   # env = \"qa.medicare.gov/supplierservices/Provider.svc/GetProvidersByIDsXML\"\r\n   # valid = true\r\n# when \"3\"\r\n   # env = \"staging.medicare.gov/supplierservices/Provider.svc/GetProvidersByIDsXML\"\r\n   # valid = true\r\n# when \"4\"\r\n   # env = \"www.medicare.gov/supplierservices/Provider.svc/GetProvidersByIDsXML\"\r\n   # valid = true\r\n# else\r\n   # puts \"Invalid input\"\r\n# end\r\n# end\r\n\r\noutputFile = File.open(@local_filename, 'w')\r\noutputFile.write(\r\n\"Supplier DB Validation\"+\"\\n\"+\r\nt.strftime(\"%m/%d/%Y %H:%M\")+\"\\n\"+\r\nurl+\"\\n\\n\"+\r\n\"Result  Change  ID        Differences\"+\"\\n\")\r\n\r\n#read SupplierDataDelta file by record\r\nFile.foreach(file_location) {|deltaRecord|\r\n\r\n\r\n##parse record\r\n   action = deltaRecord[0..9].strip\r\n   deltaID = deltaRecord[11..20].strip\r\n   deltaName = deltaRecord[30..99].strip\r\n   deltaDba_name = deltaRecord[100..169].strip\r\n   deltaAdr1 = deltaRecord[170..224].strip\r\n   deltaAdr2 = deltaRecord[225..279].strip\r\n   deltaCity = deltaRecord[280..309].strip\r\n   deltaState = deltaRecord[310..311].strip\r\n   deltaZip = deltaRecord[312..316].strip\r\n   deltaPhone = deltaRecord[327..336].strip.insert(6,'-').insert(3,'-')\r\n\r\n   deltaRecord = [deltaID, deltaName, deltaDba_name, deltaAdr1, deltaAdr2, deltaCity, deltaState, deltaZip, deltaPhone]\r\n\r\n\r\n#Make the webservice call and if it fails, wait 15 secs and try one more time\r\n\r\n#httpstring=\"https://#{env}/#{deltaID}/#{deltaCBSA}/#{deltaCTGY}\"\r\nhttpstring=\"https://#{env}/#{deltaID}\"\r\n\r\n\t# begin\r\n\t\t# response = Curl::Easy.new(httpstring)\r\n\t\t# response.ssl_verify_peer = false\r\n\t\t# response.perform do |curl|\r\n\t\t# curl.headers[\"cookie\"] = \"ASPSessionKey=\"\r\n\t\t# end\r\n\t# rescue\r\n\t\t# tries ||= 5\r\n        # puts \"There was an issue with the connection, waiting 30 seconds and trying again\"\r\n        # sleep 30\r\n\t\t# if tries > 0\r\n\t\t\t# retry\r\n\t\t# else\r\n\t\t\t# abort(\"Webservice connection is unstable. aborting test. Please try again later.\\a\\a\")\r\n\t\t# end\r\n\t# end\r\n\tresponse=getWebResponse(httpstring)\r\n   html_doc = Nokogiri::HTML(response.body_str)\r\n\r\n\r\n   dbID = html_doc.css('id').text\r\n   dbName = html_doc.css('name').text\r\n\r\n   html_doc.css('supl keyvalueofstringstring key').each do |node1|\r\n      if node1.text=='dba_name'\r\n            dbDba_name = node1.next.text #assuming that the value is the next node, returns the dba_name\r\n      end\r\n   end\r\n\r\n   dbDba_name\r\n   dbAdr1 = html_doc.css('adr1').text\r\n   dbAdr2 = html_doc.css('adr2').text\r\n   dbCity = html_doc.css('city').text\r\n   dbState = html_doc.css('state').text\r\n   dbZip = html_doc.css('zip').text\r\n   dbPhone = html_doc.css('phone').text.gsub(/[()-]/,\"\").gsub(/\\s/,\"\")\r\n   if !dbPhone.empty?\r\n      dbPhone = dbPhone.insert(6,'-').insert(3,'-')\r\n   end\r\n\r\n   dbRecord = [dbID, dbName, dbDba_name, dbAdr1, dbAdr2, dbCity, dbState, dbZip, dbPhone]\r\n\r\n\r\n# Generate Testing Results Report\r\n\r\n   case action\r\n   when \"+ Added +\"\r\n      added_count = added_count +1\r\n      missing = deltaRecord - dbRecord\r\n\r\n      missing.compact!\r\n      if missing.empty?\r\n         print \"PASSED + Added + \"+deltaID +\"\\n\"\r\n\r\n         #outputFile.write(\"PASSED +Added+ \"+deltaID +\"\\n\")\r\n         passed_count = passed_count + 1\r\n      else\r\n         print \"FAILED + Added + #{deltaID} \"\r\n         outputFile.write(\"FAILED +Added+ #{deltaID} \")\r\n         missing.each do |item|\r\n            print item+\" \"\r\n            outputFile.write(item + \" \")\r\n         end\r\n         print \"\\n\"\r\n         outputFile.write(\"\\n\")\r\n         failed_count = failed_count+1\r\n      end\r\n   when \"-Deleted-\"\r\n      dbRecord.reject! {|c| c.empty?}  #remove blank entries\r\n      deleted_count = deleted_count +1\r\n      if dbRecord.empty?\r\n         print \"PASSED -Deleted- \"+deltaID +\"\\n\"\r\n         #outputFile.write(\"PASSED -Deleted- \"+deltaID +\"\\n\")\r\n         passed_count = passed_count + 1\r\n      else\r\n         print \"FAILED -Deleted- \"+\" \"\r\n         outputFile.write(\"FAILED -Deleted- \")\r\n         dbRecord.each do |item|\r\n            print item+\" \"\r\n            outputFile.write(item + \" \")\r\n\t\tend\r\n         print \"\\n\"\r\n         outputFile.write(\"\\n\")\r\n         failed_count = failed_count+1\r\n      end\r\n\r\n   when \"New Data\"\r\n      missing = deltaRecord - dbRecord\r\n      changed_count = changed_count + 1\r\n      missing.compact!\r\n      if missing.empty?\r\n         print \"PASSED\"+\" New Data \"+deltaID +\"\\n\"\r\n         #outputFile.write(\"PASSED New Data \" +deltaID+\"\\n\")\r\n         passed_count = passed_count + 1\r\n      else\r\n         print \"FAILED New Data \"+deltaID +\" \"\r\n         outputFile.write(\"FAILED New Data \"+deltaID +\" \")\r\n         missing.each do |item|\r\n            print item+\" \"\r\n            outputFile.write(item +\" \")\r\n         end\r\n         print \"\\n\"\r\n         outputFile.write(\"\\n\")\r\n         failed_count = failed_count+1\r\n      end\r\n\r\n\r\n   else\r\n      puts \"Invalid input\"\r\n\r\n   end\r\n\r\n# Cleanup and End SupplierDataDelta read loop with brace below\r\ndbDba_name = \"\"\r\n}\r\n\r\ntotal_count = added_count + deleted_count + changed_count\r\nt = Time.now\r\noutputFile.write(\r\n\"\\n #{Title}\"+\"\\n\"+t.strftime(\"%m/%d/%Y %H:%M\")+\"\\n #{env}+\\n\"+\r\n\"Number Added = \"+added_count.to_s+\"\\n\"+\r\n\"Number Deleted = \"+deleted_count.to_s+\"\\n\"+\r\n\"Number Changed = \"+changed_count.to_s+\"\\n\"+\r\n\"Total = \"+total_count.to_s+\"\\n\\n\"+\r\n\"PASSSED = \"+passed_count.to_s+\"\\n\"+\r\n\"FAILED = \"+failed_count.to_s+\"\\n\\n\")\r\n\r\nputs \"\\nUsing #{file_location} as the input delta file\\n\\n\"\r\nputs \"Using #{url} as the environment \\n\\n\"\r\n\r\nputs \"#{Title}\"+\"\\n\"+t.strftime(\"%m/%d/%Y %H:%M\")+\"\\n #{env}+\\n\"\r\nputs \"Number Added = #{added_count.to_s}\\n\"\r\nputs \"Number Deleted = #{deleted_count.to_s}\\n\"\r\nputs \"Number Changed = #{changed_count.to_s}\\n\"\r\nputs \"Total = #{total_count.to_s}\\n\\n\"\r\nputs \"PASSSED = #{passed_count.to_s}\\n\"\r\nputs \"FAILED = #{failed_count.to_s}\\n\\n\"\r\n\r\noutputFile.close\r\nputs \"Done\\a\"\r\n","newText":""}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[253,13],[253,13]],"properties":{"type":"selection","goalScreenRange":null,"clip":"forward","preserveFolds":true},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[11,22],[11,22]],"properties":{"type":"selection","goalScreenRange":null,"clip":"forward","preserveFolds":true},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[0,0],[253,13]],"newRange":[[0,0],[0,0]],"oldText":"#  Program to test the Supplier database for changes via webservice calls\n#    This program uses the output report from SupplierDataDelta.rb\n#\n#  Created 12/31/2013 by Adam Stetser\n# Update 05/31/2015 - Todd Jones - Changed the way the script retries when the webservice is unstable.\n# Modified 8/4/2015 Brent Asher - changed to only write to output file on failures\n#\t8/11/2015 Brent Asher, Moved menu and call to web services to helper file, added indicators for program name\n#\t\tand environment on screen\n\nrequire 'curb'\nrequire 'nokogiri'\nrequire 'win32console'\nrequire_relative 'SUPRubyHelpers'\n\n@local_filename\n \ndef filename(d)\n   local_filename1 = \"../output/OPS-1267-SupplierWebDB\" #need to have file name change by day\n   filedate = d.strftime(\"%m%d%Y\")\n   local_filename2 = '.txt'\n   @local_filename = local_filename1+filedate+local_filename2\nend\n\nt=Time.now\nfilename(t)\nenv=String.new\ndbDba_name = String.new\nadded_count = 0\ndeleted_count = 0\nchanged_count = 0\ntotal_count = 0\npassed_count = 0\nfailed_count = 0\n\n# puts \"Monitoring in process\"\n# puts \"Supplier DB Webservice test\"\nTitle=\"OPS-1267 Supplier Web DB Checking\"\nurl=getenv(Title)\nenv=url+\"/supplierservices/Provider.svc/GetProvidersByIDsXML\"\n\ndelta_file = Dir.glob(\"../output/Supplier_Ruby_DeltaAuto*\") \nfile_location = delta_file[-1].gsub(\"/\", \"\\\\\")\n\n#Checks the DeltaAuto file for the \"no change\" tag to abort the script.\ntext=File.open(file_location).read\nif text == \"no change\" \n\tputs \"\\n!!Warning!!\\n\\nThe were no detected changes within the delta file.\\nPlease ensure that the correct current and prior input files were used.\\nConfirm with the technical team that the files should have the same content.\"\n\tFile.open(@local_filename, 'w') { |f| \n\t\tf.write(\"There were no changes detected within #{file_location}\\n\")\n\t\t\tf.write(\"The likely cause is the current and prior pecos files are identical.\\nPlease confirm with the technical team that this is expected.\")}\n\tabort \"Ending script\"\nend\nputs \"Using #{file_location} as the input delta file\\n\\n\"\nputs \"Using #{url} as the environment \\n\\n\"\n\n# puts \"Enter the number for the environment you are testing\"\n# puts \"1 medicare-prod-predeploy.cgifederal.com\"\n# puts \"2 QA.medicare.gov\"\n# puts \"3 Staging.medicare.gov\"\n# puts \"4 www.medicare.gov\"\n# valid = false\n# until valid\n# environment = gets\n# environment.strip!\n\n# case environment \n# when \"1\"\n\t# env = \"medicare-prod-predeploy.cgifederal.com/supplierservices/Provider.svc/GetProvidersByIDsXML\"\n\t# valid = true\n# when \"2\"\n   # env = \"qa.medicare.gov/supplierservices/Provider.svc/GetProvidersByIDsXML\"\n   # valid = true\n# when \"3\"\n   # env = \"staging.medicare.gov/supplierservices/Provider.svc/GetProvidersByIDsXML\"\n   # valid = true\n# when \"4\"\n   # env = \"www.medicare.gov/supplierservices/Provider.svc/GetProvidersByIDsXML\"\n   # valid = true\n# else\n   # puts \"Invalid input\"\n# end\n# end\n\noutputFile = File.open(@local_filename, 'w') \noutputFile.write(\n\"Supplier DB Validation\"+\"\\n\"+\nt.strftime(\"%m/%d/%Y %H:%M\")+\"\\n\"+\nurl+\"\\n\\n\"+\n\"Result  Change  ID        Differences\"+\"\\n\")\n\n#read SupplierDataDelta file by record\nFile.foreach(file_location) {|deltaRecord| \n\n\n##parse record\n   action = deltaRecord[0..9].strip\n   deltaID = deltaRecord[11..20].strip\n   deltaName = deltaRecord[30..99].strip\n   deltaDba_name = deltaRecord[100..169].strip\n   deltaAdr1 = deltaRecord[170..224].strip\n   deltaAdr2 = deltaRecord[225..279].strip\n   deltaCity = deltaRecord[280..309].strip\n   deltaState = deltaRecord[310..311].strip\n   deltaZip = deltaRecord[312..316].strip\n   deltaPhone = deltaRecord[327..336].strip.insert(6,'-').insert(3,'-')\n   \n   deltaRecord = [deltaID, deltaName, deltaDba_name, deltaAdr1, deltaAdr2, deltaCity, deltaState, deltaZip, deltaPhone]\n\n\n#Make the webservice call and if it fails, wait 15 secs and try one more time\n\n#httpstring=\"https://#{env}/#{deltaID}/#{deltaCBSA}/#{deltaCTGY}\"\nhttpstring=\"https://#{env}/#{deltaID}\"\n\n\t# begin  \n\t\t# response = Curl::Easy.new(httpstring) \n\t\t# response.ssl_verify_peer = false\n\t\t# response.perform do |curl| \n\t\t# curl.headers[\"cookie\"] = \"ASPSessionKey=\"\n\t\t# end\n\t# rescue\n\t\t# tries ||= 5\n        # puts \"There was an issue with the connection, waiting 30 seconds and trying again\"\n        # sleep 30\n\t\t# if tries > 0\n\t\t\t# retry\n\t\t# else\n\t\t\t# abort(\"Webservice connection is unstable. aborting test. Please try again later.\\a\\a\")\n\t\t# end\n\t# end\n\tresponse=getWebResponse(httpstring)\n   html_doc = Nokogiri::HTML(response.body_str)\n\n    \n   dbID = html_doc.css('id').text\n   dbName = html_doc.css('name').text\n\n   html_doc.css('supl keyvalueofstringstring key').each do |node1|\n      if node1.text=='dba_name'\n            dbDba_name = node1.next.text #assuming that the value is the next node, returns the dba_name\n      end\n   end\n\n   dbDba_name\n   dbAdr1 = html_doc.css('adr1').text\n   dbAdr2 = html_doc.css('adr2').text\n   dbCity = html_doc.css('city').text\n   dbState = html_doc.css('state').text\n   dbZip = html_doc.css('zip').text\n   dbPhone = html_doc.css('phone').text.gsub(/[()-]/,\"\").gsub(/\\s/,\"\")\n   if !dbPhone.empty?\n      dbPhone = dbPhone.insert(6,'-').insert(3,'-')\n   end\n   \n   dbRecord = [dbID, dbName, dbDba_name, dbAdr1, dbAdr2, dbCity, dbState, dbZip, dbPhone]\n   \n   \n# Generate Testing Results Report\n   \n   case action \n   when \"+ Added +\"\n      added_count = added_count +1\n      missing = deltaRecord - dbRecord\n\n      missing.compact!\n      if missing.empty?\n         print \"PASSED + Added + \"+deltaID +\"\\n\"\n\n         #outputFile.write(\"PASSED +Added+ \"+deltaID +\"\\n\") \n         passed_count = passed_count + 1\n      else\n         print \"FAILED + Added + #{deltaID} \"\n         outputFile.write(\"FAILED +Added+ #{deltaID} \")\n         missing.each do |item|\n            print item+\" \"\n            outputFile.write(item + \" \")\n         end\n         print \"\\n\"\n         outputFile.write(\"\\n\") \n         failed_count = failed_count+1\n      end\n   when \"-Deleted-\"\n      dbRecord.reject! {|c| c.empty?}  #remove blank entries\n      deleted_count = deleted_count +1\n      if dbRecord.empty?\n         print \"PASSED -Deleted- \"+deltaID +\"\\n\"\n         #outputFile.write(\"PASSED -Deleted- \"+deltaID +\"\\n\")\n         passed_count = passed_count + 1\n      else\n         print \"FAILED -Deleted- \"+\" \"\n         outputFile.write(\"FAILED -Deleted- \")\n         dbRecord.each do |item|\n            print item+\" \"\n            outputFile.write(item + \" \")\n\t\tend\n         print \"\\n\"\n         outputFile.write(\"\\n\")\n         failed_count = failed_count+1\n      end\n      \n   when \"New Data\"\n      missing = deltaRecord - dbRecord\n      changed_count = changed_count + 1\n      missing.compact!\n      if missing.empty?\n         print \"PASSED\"+\" New Data \"+deltaID +\"\\n\"\n         #outputFile.write(\"PASSED New Data \" +deltaID+\"\\n\")\n         passed_count = passed_count + 1\n      else\n         print \"FAILED New Data \"+deltaID +\" \"\n         outputFile.write(\"FAILED New Data \"+deltaID +\" \")\n         missing.each do |item|\n            print item+\" \"\n            outputFile.write(item +\" \")\n         end\n         print \"\\n\"\n         outputFile.write(\"\\n\")\n         failed_count = failed_count+1\n      end\n      \n      \n   else\n      puts \"Invalid input\"\n      \n   end\n   \n# Cleanup and End SupplierDataDelta read loop with brace below\ndbDba_name = \"\"\n}\n\ntotal_count = added_count + deleted_count + changed_count\nt = Time.now\noutputFile.write(\n\"\\n #{Title}\"+\"\\n\"+t.strftime(\"%m/%d/%Y %H:%M\")+\"\\n #{env}+\\n\"+\n\"Number Added = \"+added_count.to_s+\"\\n\"+\n\"Number Deleted = \"+deleted_count.to_s+\"\\n\"+\n\"Number Changed = \"+changed_count.to_s+\"\\n\"+\n\"Total = \"+total_count.to_s+\"\\n\\n\"+  \n\"PASSSED = \"+passed_count.to_s+\"\\n\"+ \n\"FAILED = \"+failed_count.to_s+\"\\n\\n\")\n\nputs \"\\nUsing #{file_location} as the input delta file\\n\\n\"\nputs \"Using #{url} as the environment \\n\\n\"\n\nputs \"#{Title}\"+\"\\n\"+t.strftime(\"%m/%d/%Y %H:%M\")+\"\\n #{env}+\\n\"\nputs \"Number Added = #{added_count.to_s}\\n\"\nputs \"Number Deleted = #{deleted_count.to_s}\\n\"\nputs \"Number Changed = #{changed_count.to_s}\\n\"\nputs \"Total = #{total_count.to_s}\\n\\n\"\nputs \"PASSSED = #{passed_count.to_s}\\n\"\nputs \"FAILED = #{failed_count.to_s}\\n\\n\"\n\noutputFile.close\nputs \"Done\\a\"","newText":""}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[0,0],[0,0]],"properties":{"type":"selection","goalScreenRange":null,"clip":"forward","preserveFolds":true},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[0,0],[0,0]],"properties":{"type":"selection","goalScreenRange":null,"clip":"forward","preserveFolds":true},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[0,0],[0,0]],"newRange":[[0,0],[254,0]],"oldText":"","newText":"#  Program to test the Supplier database for changes via webservice calls\r\n#    This program uses the output report from SupplierDataDelta.rb\r\n#\r\n#  Created 12/31/2013 by Adam Stetser\r\n# Update 05/31/2015 - Todd Jones - Changed the way the script retries when the webservice is unstable.\r\n# Modified 8/4/2015 Brent Asher - changed to only write to output file on failures\r\n#\t8/11/2015 Brent Asher, Moved menu and call to web services to helper file, added indicators for program name\r\n#\t\tand environment on screen\r\n\r\nrequire 'curb'\r\nrequire 'nokogiri'\r\n#require 'win32console' # Uncomment this line if ruby -v returns version lower than 2.0\r\nrequire_relative 'SUPRubyHelpers'\r\n\r\n@local_filename\r\n\r\ndef filename(d)\r\n   local_filename1 = \"../output/OPS-1267-SupplierWebDB\" #need to have file name change by day\r\n   filedate = d.strftime(\"%m%d%Y\")\r\n   local_filename2 = '.txt'\r\n   @local_filename = local_filename1+filedate+local_filename2\r\nend\r\n\r\nt=Time.now\r\nfilename(t)\r\nenv=String.new\r\ndbDba_name = String.new\r\nadded_count = 0\r\ndeleted_count = 0\r\nchanged_count = 0\r\ntotal_count = 0\r\npassed_count = 0\r\nfailed_count = 0\r\n\r\n# puts \"Monitoring in process\"\r\n# puts \"Supplier DB Webservice test\"\r\nTitle=\"OPS-1267 Supplier Web DB Checking\"\r\nurl=getenv(Title)\r\nenv=url+\"/supplierservices/Provider.svc/GetProvidersByIDsXML\"\r\n\r\ndelta_file = Dir.glob(\"../output/Supplier_Ruby_DeltaAuto*\")\r\nfile_location = delta_file[-1].gsub(\"/\", \"\\\\\")\r\n\r\n#Checks the DeltaAuto file for the \"no change\" tag to abort the script.\r\ntext=File.open(file_location).read\r\nif text == \"no change\"\r\n\tputs \"\\n!!Warning!!\\n\\nThe were no detected changes within the delta file.\\nPlease ensure that the correct current and prior input files were used.\\nConfirm with the technical team that the files should have the same content.\"\r\n\tFile.open(@local_filename, 'w') { |f|\r\n\t\tf.write(\"There were no changes detected within #{file_location}\\n\")\r\n\t\t\tf.write(\"The likely cause is the current and prior pecos files are identical.\\nPlease confirm with the technical team that this is expected.\")}\r\n\tabort \"Ending script\"\r\nend\r\nputs \"Using #{file_location} as the input delta file\\n\\n\"\r\nputs \"Using #{url} as the environment \\n\\n\"\r\n\r\n# puts \"Enter the number for the environment you are testing\"\r\n# puts \"1 medicare-prod-predeploy.cgifederal.com\"\r\n# puts \"2 QA.medicare.gov\"\r\n# puts \"3 Staging.medicare.gov\"\r\n# puts \"4 www.medicare.gov\"\r\n# valid = false\r\n# until valid\r\n# environment = gets\r\n# environment.strip!\r\n\r\n# case environment\r\n# when \"1\"\r\n\t# env = \"medicare-prod-predeploy.cgifederal.com/supplierservices/Provider.svc/GetProvidersByIDsXML\"\r\n\t# valid = true\r\n# when \"2\"\r\n   # env = \"qa.medicare.gov/supplierservices/Provider.svc/GetProvidersByIDsXML\"\r\n   # valid = true\r\n# when \"3\"\r\n   # env = \"staging.medicare.gov/supplierservices/Provider.svc/GetProvidersByIDsXML\"\r\n   # valid = true\r\n# when \"4\"\r\n   # env = \"www.medicare.gov/supplierservices/Provider.svc/GetProvidersByIDsXML\"\r\n   # valid = true\r\n# else\r\n   # puts \"Invalid input\"\r\n# end\r\n# end\r\n\r\noutputFile = File.open(@local_filename, 'w')\r\noutputFile.write(\r\n\"Supplier DB Validation\"+\"\\n\"+\r\nt.strftime(\"%m/%d/%Y %H:%M\")+\"\\n\"+\r\nurl+\"\\n\\n\"+\r\n\"Result  Change  ID        Differences\"+\"\\n\")\r\n\r\n#read SupplierDataDelta file by record\r\nFile.foreach(file_location) {|deltaRecord|\r\n\r\n\r\n##parse record\r\n   action = deltaRecord[0..9].strip\r\n   deltaID = deltaRecord[11..20].strip\r\n   deltaName = deltaRecord[30..99].strip\r\n   deltaDba_name = deltaRecord[100..169].strip\r\n   deltaAdr1 = deltaRecord[170..224].strip\r\n   deltaAdr2 = deltaRecord[225..279].strip\r\n   deltaCity = deltaRecord[280..309].strip\r\n   deltaState = deltaRecord[310..311].strip\r\n   deltaZip = deltaRecord[312..316].strip\r\n   deltaPhone = deltaRecord[327..336].strip.insert(6,'-').insert(3,'-')\r\n\r\n   deltaRecord = [deltaID, deltaName, deltaDba_name, deltaAdr1, deltaAdr2, deltaCity, deltaState, deltaZip, deltaPhone]\r\n\r\n\r\n#Make the webservice call and if it fails, wait 15 secs and try one more time\r\n\r\n#httpstring=\"https://#{env}/#{deltaID}/#{deltaCBSA}/#{deltaCTGY}\"\r\nhttpstring=\"https://#{env}/#{deltaID}\"\r\n\r\n\t# begin\r\n\t\t# response = Curl::Easy.new(httpstring)\r\n\t\t# response.ssl_verify_peer = false\r\n\t\t# response.perform do |curl|\r\n\t\t# curl.headers[\"cookie\"] = \"ASPSessionKey=\"\r\n\t\t# end\r\n\t# rescue\r\n\t\t# tries ||= 5\r\n        # puts \"There was an issue with the connection, waiting 30 seconds and trying again\"\r\n        # sleep 30\r\n\t\t# if tries > 0\r\n\t\t\t# retry\r\n\t\t# else\r\n\t\t\t# abort(\"Webservice connection is unstable. aborting test. Please try again later.\\a\\a\")\r\n\t\t# end\r\n\t# end\r\n\tresponse=getWebResponse(httpstring)\r\n   html_doc = Nokogiri::HTML(response.body_str)\r\n\r\n\r\n   dbID = html_doc.css('id').text\r\n   dbName = html_doc.css('name').text\r\n\r\n   html_doc.css('supl keyvalueofstringstring key').each do |node1|\r\n      if node1.text=='dba_name'\r\n            dbDba_name = node1.next.text #assuming that the value is the next node, returns the dba_name\r\n      end\r\n   end\r\n\r\n   dbDba_name\r\n   dbAdr1 = html_doc.css('adr1').text\r\n   dbAdr2 = html_doc.css('adr2').text\r\n   dbCity = html_doc.css('city').text\r\n   dbState = html_doc.css('state').text\r\n   dbZip = html_doc.css('zip').text\r\n   dbPhone = html_doc.css('phone').text.gsub(/[()-]/,\"\").gsub(/\\s/,\"\")\r\n   if !dbPhone.empty?\r\n      dbPhone = dbPhone.insert(6,'-').insert(3,'-')\r\n   end\r\n\r\n   dbRecord = [dbID, dbName, dbDba_name, dbAdr1, dbAdr2, dbCity, dbState, dbZip, dbPhone]\r\n\r\n\r\n# Generate Testing Results Report\r\n\r\n   case action\r\n   when \"+ Added +\"\r\n      added_count = added_count +1\r\n      missing = deltaRecord - dbRecord\r\n\r\n      missing.compact!\r\n      if missing.empty?\r\n         print \"PASSED + Added + \"+deltaID +\"\\n\"\r\n\r\n         #outputFile.write(\"PASSED +Added+ \"+deltaID +\"\\n\")\r\n         passed_count = passed_count + 1\r\n      else\r\n         print \"FAILED + Added + #{deltaID} \"\r\n         outputFile.write(\"FAILED +Added+ #{deltaID} \")\r\n         missing.each do |item|\r\n            print item+\" \"\r\n            outputFile.write(item + \" \")\r\n         end\r\n         print \"\\n\"\r\n         outputFile.write(\"\\n\")\r\n         failed_count = failed_count+1\r\n      end\r\n   when \"-Deleted-\"\r\n      dbRecord.reject! {|c| c.empty?}  #remove blank entries\r\n      deleted_count = deleted_count +1\r\n      if dbRecord.empty?\r\n         print \"PASSED -Deleted- \"+deltaID +\"\\n\"\r\n         #outputFile.write(\"PASSED -Deleted- \"+deltaID +\"\\n\")\r\n         passed_count = passed_count + 1\r\n      else\r\n         print \"FAILED -Deleted- \"+\" \"\r\n         outputFile.write(\"FAILED -Deleted- \")\r\n         dbRecord.each do |item|\r\n            print item+\" \"\r\n            outputFile.write(item + \" \")\r\n\t\tend\r\n         print \"\\n\"\r\n         outputFile.write(\"\\n\")\r\n         failed_count = failed_count+1\r\n      end\r\n\r\n   when \"New Data\"\r\n      missing = deltaRecord - dbRecord\r\n      changed_count = changed_count + 1\r\n      missing.compact!\r\n      if missing.empty?\r\n         print \"PASSED\"+\" New Data \"+deltaID +\"\\n\"\r\n         #outputFile.write(\"PASSED New Data \" +deltaID+\"\\n\")\r\n         passed_count = passed_count + 1\r\n      else\r\n         print \"FAILED New Data \"+deltaID +\" \"\r\n         outputFile.write(\"FAILED New Data \"+deltaID +\" \")\r\n         missing.each do |item|\r\n            print item+\" \"\r\n            outputFile.write(item +\" \")\r\n         end\r\n         print \"\\n\"\r\n         outputFile.write(\"\\n\")\r\n         failed_count = failed_count+1\r\n      end\r\n\r\n\r\n   else\r\n      puts \"Invalid input\"\r\n\r\n   end\r\n\r\n# Cleanup and End SupplierDataDelta read loop with brace below\r\ndbDba_name = \"\"\r\n}\r\n\r\ntotal_count = added_count + deleted_count + changed_count\r\nt = Time.now\r\noutputFile.write(\r\n\"\\n #{Title}\"+\"\\n\"+t.strftime(\"%m/%d/%Y %H:%M\")+\"\\n #{env}+\\n\"+\r\n\"Number Added = \"+added_count.to_s+\"\\n\"+\r\n\"Number Deleted = \"+deleted_count.to_s+\"\\n\"+\r\n\"Number Changed = \"+changed_count.to_s+\"\\n\"+\r\n\"Total = \"+total_count.to_s+\"\\n\\n\"+\r\n\"PASSSED = \"+passed_count.to_s+\"\\n\"+\r\n\"FAILED = \"+failed_count.to_s+\"\\n\\n\")\r\n\r\nputs \"\\nUsing #{file_location} as the input delta file\\n\\n\"\r\nputs \"Using #{url} as the environment \\n\\n\"\r\n\r\nputs \"#{Title}\"+\"\\n\"+t.strftime(\"%m/%d/%Y %H:%M\")+\"\\n #{env}+\\n\"\r\nputs \"Number Added = #{added_count.to_s}\\n\"\r\nputs \"Number Deleted = #{deleted_count.to_s}\\n\"\r\nputs \"Number Changed = #{changed_count.to_s}\\n\"\r\nputs \"Total = #{total_count.to_s}\\n\\n\"\r\nputs \"PASSSED = #{passed_count.to_s}\\n\"\r\nputs \"FAILED = #{failed_count.to_s}\\n\\n\"\r\n\r\noutputFile.close\r\nputs \"Done\\a\"\r\n"}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[254,0],[254,0]],"properties":{"type":"selection","goalScreenRange":null,"clip":"forward","preserveFolds":true},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}}],"redoStack":[]},"encoding":"utf8","filePath":"C:\\automation\\ops\\Ruby\\supplier\\scripts\\OPS-1267-SupplierWebDB.rb","digestWhenLastPersisted":"e2187cacf107f4dfe5185ff2bec100034369e5f9","preferredLineEnding":null,"nextMarkerId":70,"deserializer":"TextBuffer","version":5},{"id":"9efb8d0e2bf8d1f63da4017d63da2aaa","text":"# Supplier Model Delta script\r\n# Todd Jones \r\n# Purpose: To create a delta file to be used for SupplierModels.rb script without the need for a post-sql processed delta file.\r\n\r\ndate = Time.now\r\noutput = File.open(\"../output/brand_extract_delta_#{date.strftime(\"%Y%m%d\")}.txt\", 'a') # 'a' appends to existing file, 'w' overwrites \r\n@prior_array = Array.new\r\n@current_array = Array.new\r\n\r\ndef load_array(input)\r\n\tsupplier_array = Array.new\r\n\tbrands_array = Array.new\r\n\tsupplier_index = Hash.new\r\n\tbrands_index = Hash.new\r\n\tmodels_hash = Hash.new\r\n\tsupplier = File.open(\"../#{input}/CBIC_SUPPLIER.txt\", 'r')\r\n\tbrands = File.open(\"../#{input}/CBIC_BRANDS.txt\", 'r')\r\n\tsupplier.each { |line|\r\n\t\tsupID = line[0..9]\r\n\t\tnext if supID == \"HHHHHHHHHH\"\r\n\t\tcbsa = line[10..14]\r\n\t\tctgy = line[15..17].to_i+900\r\n\t\tcontID = line[18..27]\r\n\t\tphone = line[28..41]\r\n\t\tdba = line[42..-1].strip\r\n\t\tsupplier_array << [contID, cbsa, ctgy, supID]\r\n\t}\r\n\r\n\tbrands.each do |line|\r\n\t\tcontID = line[0..9]\r\n\t\tnext if contID == \"HHHHHHHHHH\"\r\n\t\tcbsa = line[10..14]\r\n\t\tctgy = line[15..17].to_i+900\r\n\t\tmftr = line[18..272].strip\r\n\t\tmodel = line[273..-1].strip\r\n\t\tbrands_array << [contID, cbsa, ctgy, mftr, model]\r\n\tend\r\n\r\n\tsupplier_array.each do |x|\r\n\t\tkey = \"#{x[0]}#{x[1]}#{x[2]}\"\r\n\t\tsupplier_index[key] ||= []\r\n\t\tsupplier_index[key] << x[3]\r\n\tend\r\n\r\n\tbrands_array.each do |x|\r\n\t\tkey = \"#{x[0]}#{x[1]}#{x[2]}\"\r\n\t\tbrands_index[key] ||= []\r\n\t\tbrands_index[key] << \"#{x[3]}|#{x[4]}\"\r\n\tend\r\n\r\n\tsupplier_index.keys.each do |key|\r\n\t\tsup = supplier_index.fetch(key, [])\r\n\t\tmod = brands_index.fetch(key, [])\r\n\t\tmodels_hash[key] ||= []\r\n\t\tmodels_hash[key] << [sup, mod]\r\n\tend\r\n\r\n\tmodels_hash.each do |key, value|\r\n\t\tcbsa = key[10..14]\r\n\t\tctgy = key[15..17]\r\n\t\tsuppliers = value[0][0]\r\n\t\tmodels = value[0][1]\r\n\t\tsuppliers.each do |supplier|\r\n\t\t\tmodels.each do |line|\r\n\t\t\t\tline = line.split(\"|\")\r\n\t\t\t\tmftr = line[0]\r\n\t\t\t\tmodel = line[1]\r\n\t\t\t\t@prior_array << [supplier,cbsa,ctgy,mftr,model] if input == \"prior\"\r\n\t\t\t\t@current_array << [supplier,cbsa,ctgy,mftr,model] if input == \"current\"\r\n\t\t\tend\r\n\t\tend\r\n\tend\r\n\t@prior_array.sort! if input == \"prior\"\r\n\t@current_array.sort! if input == \"current\"\r\nend\r\n\r\nload_array(\"prior\")\r\nload_array(\"current\")\r\n\r\ndeleted = @prior_array - @current_array\r\nadded = @current_array - @prior_array \r\n\r\nadded.each do |item|\r\n\tsupID = item[0]\r\n\tcbsa = item[1]\r\n\tctgy = item[2]\r\n\tmftr = item[3]\r\n\tmodel = item[4]\r\n\toutput.write(\"+ ADDED +\\t#{supID}\\t#{cbsa}\\t#{ctgy}\\t#{mftr}\\t#{model}\\n\")\r\n\tputs \"+ ADDED +\\t#{supID}\\t#{cbsa}\\t#{ctgy}\\t#{mftr}\\t#{model}\\n\"\r\nend\r\n\r\ndeleted.each do |item|\r\n\tsupID = item[0]\r\n\tcbsa = item[1]\r\n\tctgy = item[2]\r\n\tmftr = item[3]\r\n\tmodel = item[4]\r\n\toutput.write(\"-DELETED-\\t#{supID}\\t#{cbsa}\\t#{ctgy}\\t#{mftr}\\t#{model}\\n\")\r\n\tputs \"-DELETED-\\t#{supID}\\t#{cbsa}\\t#{ctgy}\\t#{mftr}\\t#{model}\\n\"\r\nend\r\n\r\nputs \"Finish creating output data \\n\"\r\nprint 'Do you wish to execute the DB test for supplier ? (Y/N)'\r\n\t\r\n\tdoDB = gets.strip!\r\nif doDB.upcase == 'Y' then\r\n\tsystem (\"ruby OPS-1720-SupplierModels.rb\")\r\nend\r\nputs \"Done\\a\"","defaultMarkerLayerId":"0","markerLayers":{"0":{"id":"0","maintainHistory":false,"markersById":{},"version":2},"1":{"id":"1","maintainHistory":false,"markersById":{},"version":2},"2":{"id":"2","maintainHistory":true,"markersById":{"1":{"range":{"start":{"row":25,"column":2},"end":{"row":25,"column":16}},"properties":{"type":"selection","preserveFolds":true,"goalScreenRange":null,"autoscroll":false},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"}},"version":2},"4":{"id":"4","maintainHistory":false,"markersById":{},"version":2},"6":{"id":"6","maintainHistory":false,"markersById":{},"version":2},"7":{"id":"7","maintainHistory":false,"markersById":{},"version":2}},"nextMarkerLayerId":8,"history":{"version":3,"nextCheckpointId":1,"undoStack":[],"redoStack":[]},"encoding":"utf8","filePath":"C:\\automation\\ops\\Ruby\\supplier\\scripts\\OPS-1720-SupplierModelDelta.rb","digestWhenLastPersisted":"3bcdf38b25b05876dd81007ba509d94071ffff39","preferredLineEnding":null,"nextMarkerId":5,"deserializer":"TextBuffer","version":5}]},"workspace":{"deserializer":"Workspace","paneContainer":{"deserializer":"PaneContainer","version":1,"root":{"deserializer":"Pane","id":3,"items":[{"deserializer":"TextEditor","id":8,"softTabs":false,"firstVisibleScreenRow":0,"firstVisibleScreenColumn":0,"displayBuffer":{"deserializer":"DisplayBuffer","id":9,"softWrapped":false,"tokenizedBuffer":{"deserializer":"TokenizedBuffer","bufferPath":"C:\\automation\\ops\\Ruby\\supplier\\scripts\\OPS-1720-SupplierModels.rb","bufferId":"8717ffe0174d39ad739d8dddead68ec1","largeFileMode":false},"largeFileMode":false,"foldsMarkerLayerId":"1"},"selectionsMarkerLayerId":"2"},{"deserializer":"TextEditor","id":36,"softTabs":true,"firstVisibleScreenRow":0,"firstVisibleScreenColumn":0,"displayBuffer":{"deserializer":"DisplayBuffer","id":37,"softWrapped":false,"tokenizedBuffer":{"deserializer":"TokenizedBuffer","bufferPath":"C:\\automation\\ops\\Ruby\\supplier\\scripts\\OPS-1267-SupplierWebDB.rb","bufferId":"ca7de71082940fbe2c82f723ebd86b48","largeFileMode":false},"largeFileMode":false,"foldsMarkerLayerId":"1"},"selectionsMarkerLayerId":"2"},{"deserializer":"TextEditor","id":32,"softTabs":true,"firstVisibleScreenRow":0,"firstVisibleScreenColumn":0,"displayBuffer":{"deserializer":"DisplayBuffer","id":33,"softWrapped":false,"tokenizedBuffer":{"deserializer":"TokenizedBuffer","bufferPath":"C:\\automation\\ops\\Ruby\\supplier\\scripts\\OPS-1267-SupplierDelta.rb","bufferId":"0658d43959cc96a7583fb839adcebaac","largeFileMode":false},"largeFileMode":false,"foldsMarkerLayerId":"1"},"selectionsMarkerLayerId":"2"},{"deserializer":"TextEditor","id":44,"softTabs":false,"firstVisibleScreenRow":30,"firstVisibleScreenColumn":0,"displayBuffer":{"deserializer":"DisplayBuffer","id":45,"softWrapped":false,"tokenizedBuffer":{"deserializer":"TokenizedBuffer","bufferPath":"C:\\automation\\ops\\Ruby\\supplier\\scripts\\OPS-1720-SupplierModelDelta.rb","bufferId":"9efb8d0e2bf8d1f63da4017d63da2aaa","largeFileMode":false},"largeFileMode":false,"foldsMarkerLayerId":"1"},"selectionsMarkerLayerId":"2"}],"activeItemURI":"C:\\automation\\ops\\Ruby\\supplier\\scripts\\OPS-1720-SupplierModelDelta.rb","focused":true,"flexScale":1},"activePaneId":3},"packagesWithActiveGrammars":["language-ruby","language-hyperlink","language-todo"],"destroyedItemURIs":["C:\\Users\\atjones\\.atom\\packages\\README.md","C:\\automation\\ops\\.git\\COMMIT_EDITMSG","C:\\automation\\ops\\Ruby\\gemtest.rb","atom://config","C:\\automation\\ops\\Ruby\\supplier\\scripts\\SUPRubyHelpers.rb"]},"packageStates":{"fuzzy-finder":{"C:\\automation\\ops\\Ruby\\supplier\\scripts\\OPS-1720-SupplierModels.rb":1460402723923,"C:\\automation\\ops\\Ruby\\supplier\\scripts\\OPS-1267-SupplierWebDB.rb":1460402734601,"C:\\automation\\ops\\Ruby\\supplier\\scripts\\OPS-1267-SupplierDelta.rb":1460402723390,"C:\\automation\\ops\\Ruby\\supplier\\scripts\\OPS-1720-SupplierModelDelta.rb":1460402979749},"metrics":{"sessionLength":5946514},"tree-view":{"directoryExpansionStates":{"C:\\automation\\ops\\Ruby\\supplier\\scripts":{"isExpanded":true,"entries":{}}},"selectedPath":"C:\\automation\\ops\\Ruby\\supplier\\scripts\\OPS-1720-SupplierModelDelta.rb","hasFocus":false,"attached":true,"scrollLeft":0,"scrollTop":0,"width":200},"keybinding-resolver":{},"find-and-replace":{"findOptions":{"findPattern":"supplier_array","replacePattern":"","pathsPattern":"","useRegex":false,"wholeWord":false,"caseSensitive":false,"inCurrentSelection":false},"findHistory":[],"replaceHistory":[],"pathsHistory":[]}},"fullScreen":false}